{"version":3,"sources":["webpack:///js/app.74e716a4197caf5dda6e.js","webpack:///webpack/bootstrap 40d8661a55e05d5b8673","webpack:///./src/main.js","webpack:///./src/components/App/App.js","webpack:///./src/components/Carousel/Carousel.js","webpack:///./~/material-design-lite/material.js","webpack:///./src/components/Carousel/Carousel.html","webpack:///./src/components/App/App.html","webpack:///./src/components/App/App.vue","webpack:///./src/components/Carousel/Carousel.vue","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_App","_App2","el","components","App","Object","defineProperty","value","_material","_material2","_Carousel","_Carousel2","ready","upgradeDom","images","img","msg","this","$refs","carousel","setData","Carousel","data","currentSlideIndex","imagesCount","carouselWraperStyle","left","width","imageStyle","methods","length","setCurrentSlide","index","MaterialTab","tab","ctx","element_","classList","contains","CssClasses_","MDL_JS_RIPPLE_EFFECT","rippleContainer","document","createElement","add","MDL_RIPPLE_CONTAINER","ripple","MDL_RIPPLE","appendChild","addEventListener","e","preventDefault","href","split","panel","querySelector","resetTabState_","resetPanelState_","ACTIVE_CLASS","MaterialLayoutTab","tabs","panels","layout","selectTab","content_","IS_ACTIVE","tabBar_","JS_RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","getAttribute","charAt","show","componentHandler","optJsClass","optCssClass","upgradeElement","element","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","register","config","downgradeElements","nodes","findRegisteredClass_","name","optReplace","i","registeredComponents_","className","getUpgradedListOfElement_","dataUpgraded","isElementUpgraded_","upgradedList","indexOf","upgradeDomInternal","cssClass","registeredClass","querySelectorAll","n","upgradeElementInternal","Element","Error","classesToUpgrade","push","forEach","component","setAttribute","join","instance","classConstructor","componentConfigProperty_","createdComponents_","j","callbacks","widget","ev","window","CustomEvent","Event","bubbles","cancelable","createEvent","initEvent","dispatchEvent","upgradeElementsInternal","Array","isArray","item","prototype","slice","HTMLElement","children","registerInternal","widgetMissing","newConfig","constructor","classAsString","hasOwnProperty","found","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","deconstructComponentInternal","componentIndex","splice","upgrades","componentPlace","downgradeNodesInternal","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","documentElement","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","navigator","userAgent","lastTime","nextTime","Math","max","setTimeout","clearTimeout","MaterialButton","init","Constant_","RIPPLE_EFFECT","blurHandler_","event","blur","disable","disabled","enable","rippleElement_","boundRippleBlurHandler","bind","boundButtonBlurHandler","MaterialCheckbox","TINY_TIMEOUT","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_IGNORE_EVENTS","RIPPLE_CENTER","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","updateClasses_","onFocus_","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","inputElement_","checked","check","uncheck","boxOutline","tickContainer","tickOutline","rippleContainerElement_","boundRippleMouseUp","boundInputOnChange","boundInputOnFocus","boundInputOnBlur","boundElementMouseUp","MaterialIconToggle","boundElementOnMouseUp","MaterialMenu","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","getElementById","forElement_","handleForClick_","handleForKeyboardEvent_","items","boundItemKeydown_","handleItemKeyboardEvent_","boundItemClick_","handleItemClick_","tabIndex","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","offsetLeft","bottom","toggle","keyCode","focus","currentIndex","target","MouseEvent","click","hide","hasAttribute","stopPropagation","closing_","applyClip_","height","clip","removeAnimationEndListener_","addAnimationEndListener_","transitionDuration","itemDelay","transitionDelay","parentNode","removeEventListener","removeProperty","MaterialProgress","INDETERMINATE_CLASS","setProgress","progressbar_","setBuffer","bufferbar_","auxbar_","MaterialRadio","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","radios","getElementsByClassName","button","btnElement_","onMouseup_","boundChangeHandler_","boundFocusHandler_","boundBlurHandler_","boundMouseUpHandler_","outerCircle","innerCircle","MaterialSlider","isIE_","msPointerEnabled","IE_CONTAINER","SLIDER_CONTAINER","BACKGROUND_FLEX","BACKGROUND_LOWER","BACKGROUND_UPPER","IS_LOWEST_VALUE","onInput_","updateValueStyles_","onContainerMouseDown_","newEvent","buttons","clientX","clientY","y","fraction","min","backgroundLower_","flex","webkitFlex","backgroundUpper_","change","containerIE","backgroundFlex","boundInputHandler","boundChangeHandler","boundMouseUpHandler","boundContainerMouseDownHandler","MaterialSnackbar","textElement_","cssClasses_","MESSAGE","actionElement_","ACTION","active","actionHandler_","undefined","message_","actionText_","queuedNotifications_","setActionHidden_","ANIMATION_LENGTH","SNACKBAR","ACTIVE","displaySnackbar_","textContent","cleanup_","timeout_","showSnackbar","checkQueue_","shift","Boolean","removeAttribute","MaterialSpinner","MDL_SPINNER_LAYER_COUNT","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","start","MaterialSwitch","TRACK","THUMB","on","off","track","thumb","focusHelper","boundFocusHandler","boundBlurHandler","MaterialTabs","TAB_CLASS","PANEL_CLASS","UPGRADED_CLASS","MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS","initTabs_","tabs_","panels_","k","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","LABEL","IS_DIRTY","IS_INVALID","HAS_PLACEHOLDER","onKeyDown_","currentRowCount","onReset_","checkValidity","checkDirty","checkFocus","input_","validity","valid","label_","parseInt","isNaN","boundUpdateClassesHandler","boundResetHandler","boundKeyDownHandler","invalid","MaterialTooltip","BOTTOM","LEFT","RIGHT","TOP","handleMouseEnter_","props","marginLeft","offsetWidth","marginTop","handleMouseLeave_","boundMouseEnterHandler","boundMouseLeaveHandler","MaterialLayout","MAX_WIDTH","TAB_SCROLL_PIXELS","RESIZE_TIMEOUT","MENU_ICON","CHEVRON_LEFT","CHEVRON_RIGHT","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","HEADER","DRAWER","CONTENT","DRAWER_BTN","ICON","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","PANEL","HAS_DRAWER","HAS_TABS","HAS_SCROLLING_HEADER","CASTING_SHADOW","IS_COMPACT","IS_SMALL_SCREEN","IS_DRAWER_OPEN","ON_LARGE_SCREEN","ON_SMALL_SCREEN","contentScrollHandler_","header_","headerVisible","scrollTop","keyboardEventHandler_","drawer_","toggleDrawer","screenSizeHandler_","screenSizeMediaQuery_","matches","obfuscator_","drawerToggleHandler_","type","headerTransitionEndHandler_","headerClickHandler_","tabBar","drawerButton","focusedElement","directChildren","childNodes","numChildren","child","persisted","overflowY","mode","drawerButtonIcon","innerHTML","firstChild","obfuscator","matchMedia","addListener","tabContainer","leftButton","leftButtonIcon","scrollLeft","rightButton","rightButtonIcon","tabUpdateHandler","scrollWidth","windowResizeHandler","resizeTimeoutId_","MaterialDataTable","DATA_TABLE","SELECTABLE","SELECT_ELEMENT","IS_SELECTED","selectRow_","checkbox","row","opt_rows","createCheckbox_","label","labelClasses","firstHeader","bodyRows","footRows","rows","concat","th","headerCheckbox","firstCell","td","nodeName","toUpperCase","rowCheckbox","MaterialRipple","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_EFFECT_IGNORE_EVENTS","downHandler_","boundHeight","boundWidth","rippleSize_","sqrt","ignoringMouseDown_","frameCount","getFrameCount","setFrameCount","x","bound","currentTarget","round","touches","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","recentering","frameCount_","x_","y_","boundDownHandler","boundUpHandler","fC","getRippleElement","newX","newY","transformString","scale","size","offset","webkitTransform","msTransform","transform","__vue_script__","__vue_template__","options","template","global","set","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","str","charCodeAt","_toString","toString","toNumber","parsed","Number","toBoolean","stripQuotes","a","b","camelize","replace","camelizeRE","toUpper","_","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","fn","l","arguments","apply","toArray","list","ret","extend","to","from","keys","isObject","isPlainObject","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","head","tail","_keymap","create","pushFilter","lastFilterIndex","trim","tokens","match","filterTokenRE","map","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","applyTransition","beforeWithTransition","before","removeWithTransition","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","inDoc","doc","ownerDocument","parent","nodeType","getAttr","_attr","getBindAttr","hasBindAttr","after","nextSibling","prepend","replaceChild","useCapture","getClass","classname","baseVal","setClass","cls","isIE9","namespaceURI","addClass","cur","removeClass","tar","extractContent","asFragment","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","getOuterHTML","outerHTML","cloneNode","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","Vue","guardProps","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","mixin","mixinOptions","warnMissing","camelizedId","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","_init","$el","$root","$children","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","$options","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","noop","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","queue","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","nextTick","Watcher","expOrFn","isFn","uid$2","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","clonedNode","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","floor","getTrackByKey","trackByKey","getValue","multi","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","keyCodes","stopFilter","preventFilter","selfFilter","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","kebab","camelPrefixes","normalize$1","_key","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","expectedTypes","assertedType","assertType","expectedType","validator","coerce","String","pushJob","job","queue$1","flush","f","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","typeCache","isHidden","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","update","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","noop$1","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","source","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","search","delimiter","convertArray","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","nextElementSibling","elseEl","elseFrag","elseFactory","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","select","_this","multiple","initValue","selectedIndex","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","enter","space","delete","up","down","on$1","acceptStatement","iframeBind","contentWindow","capture","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version"],"mappings":"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","file":"js/app.74e716a4197caf5dda6e.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(11);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(9);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tnew _vue2.default({\n\t    el: 'body',\n\t    components: { App: _App2.default }\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _material = __webpack_require__(3);\n\t\n\tvar _material2 = _interopRequireDefault(_material);\n\t\n\t__webpack_require__(4);\n\t\n\tvar _Carousel = __webpack_require__(10);\n\t\n\tvar _Carousel2 = _interopRequireDefault(_Carousel);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    ready: function ready() {\n\t        _material2.default.upgradeDom();\n\t        var images = [{\n\t            img: 'http://acmedia365.com/wp-content/uploads/2016/02/201009101513590430.jpg',\n\t            msg: 'Craving for more than campus food? Fortunately, you have FooPar Beta!'\n\t        }, {\n\t            img: 'https://wallpaperscraft.com/image/salad_vegetables_greens_healthy_food_20779_1024x768.jpg',\n\t            msg: 'Try our catering service for a variety of snacks and refreshments for functions'\n\t        }, {\n\t            img: 'http://myhealthydish.com/wp-content/uploads/2015/07/healthy-foods-1024x768.jpg',\n\t            msg: 'Simply choose from our lunch selection to avoid queues in the canteens'\n\t        }, {\n\t            img: 'http://www.wallcoo.net/photography/sz189-at-the-Table/wallpapers/1024x768/foods-on-table-HV038_350A_wallcoo.com.jpg',\n\t            msg: \"Anytime you feel like eating off-campus foods, don't hesitate to tell us.\"\n\t        }];\n\t        this.$refs.carousel.setData(images);\n\t    },\n\t\n\t    components: {\n\t        Carousel: _Carousel2.default\n\t    }\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    ready: function ready() {},\n\t    data: function data() {\n\t        return {\n\t            currentSlideIndex: 0,\n\t            images: [],\n\t            imagesCount: 0,\n\t            carouselWraperStyle: { left: 0, width: 0 },\n\t            imageStyle: {}\n\t        };\n\t    },\n\t\n\t    methods: {\n\t        setData: function setData(images) {\n\t            this.images = images;\n\t            this.imagesCount = this.images.length;\n\t            this.carouselWraperStyle.width = 100 * this.imagesCount + \"%\";\n\t        },\n\t        setCurrentSlide: function setCurrentSlide(index) {\n\t            this.currentSlideIndex = index;\n\t            this.carouselWraperStyle.left = -100 * this.currentSlideIndex + \"%\";\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t;(function() {\n\t\"use strict\";\n\t\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t/**\n\t * A component handler interface using the revealing module design pattern.\n\t * More details on this design pattern here:\n\t * https://github.com/jasonmayes/mdl-component-design-pattern\n\t *\n\t * @author Jason Mayes.\n\t */\n\t/* exported componentHandler */\n\t\n\t// Pre-defining the componentHandler interface, for closure documentation and\n\t// static verification.\n\tvar componentHandler = {\n\t  /**\n\t   * Searches existing DOM for elements of our component type and upgrades them\n\t   * if they have not already been upgraded.\n\t   *\n\t   * @param {string=} optJsClass the programatic name of the element class we\n\t   * need to create a new instance of.\n\t   * @param {string=} optCssClass the name of the CSS class elements of this\n\t   * type will have.\n\t   */\n\t  upgradeDom: function(optJsClass, optCssClass) {},\n\t  /**\n\t   * Upgrades a specific element rather than all in the DOM.\n\t   *\n\t   * @param {!Element} element The element we wish to upgrade.\n\t   * @param {string=} optJsClass Optional name of the class we want to upgrade\n\t   * the element to.\n\t   */\n\t  upgradeElement: function(element, optJsClass) {},\n\t  /**\n\t   * Upgrades a specific list of elements rather than all in the DOM.\n\t   *\n\t   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n\t   * The elements we wish to upgrade.\n\t   */\n\t  upgradeElements: function(elements) {},\n\t  /**\n\t   * Upgrades all registered components found in the current DOM. This is\n\t   * automatically called on window load.\n\t   */\n\t  upgradeAllRegistered: function() {},\n\t  /**\n\t   * Allows user to be alerted to any upgrades that are performed for a given\n\t   * component type\n\t   *\n\t   * @param {string} jsClass The class name of the MDL component we wish\n\t   * to hook into for any upgrades performed.\n\t   * @param {function(!HTMLElement)} callback The function to call upon an\n\t   * upgrade. This function should expect 1 parameter - the HTMLElement which\n\t   * got upgraded.\n\t   */\n\t  registerUpgradedCallback: function(jsClass, callback) {},\n\t  /**\n\t   * Registers a class for future use and attempts to upgrade existing DOM.\n\t   *\n\t   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n\t   */\n\t  register: function(config) {},\n\t  /**\n\t   * Downgrade either a given node, an array of nodes, or a NodeList.\n\t   *\n\t   * @param {!Node|!Array<!Node>|!NodeList} nodes\n\t   */\n\t  downgradeElements: function(nodes) {}\n\t};\n\t\n\tcomponentHandler = (function() {\n\t  'use strict';\n\t\n\t  /** @type {!Array<componentHandler.ComponentConfig>} */\n\t  var registeredComponents_ = [];\n\t\n\t  /** @type {!Array<componentHandler.Component>} */\n\t  var createdComponents_ = [];\n\t\n\t  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\t\n\t  /**\n\t   * Searches registered components for a class we are interested in using.\n\t   * Optionally replaces a match with passed object if specified.\n\t   *\n\t   * @param {string} name The name of a class we want to use.\n\t   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n\t   * @return {!Object|boolean}\n\t   * @private\n\t   */\n\t  function findRegisteredClass_(name, optReplace) {\n\t    for (var i = 0; i < registeredComponents_.length; i++) {\n\t      if (registeredComponents_[i].className === name) {\n\t        if (typeof optReplace !== 'undefined') {\n\t          registeredComponents_[i] = optReplace;\n\t        }\n\t        return registeredComponents_[i];\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Returns an array of the classNames of the upgraded classes on the element.\n\t   *\n\t   * @param {!Element} element The element to fetch data from.\n\t   * @return {!Array<string>}\n\t   * @private\n\t   */\n\t  function getUpgradedListOfElement_(element) {\n\t    var dataUpgraded = element.getAttribute('data-upgraded');\n\t    // Use `['']` as default value to conform the `,name,name...` style.\n\t    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n\t  }\n\t\n\t  /**\n\t   * Returns true if the given element has already been upgraded for the given\n\t   * class.\n\t   *\n\t   * @param {!Element} element The element we want to check.\n\t   * @param {string} jsClass The class to check for.\n\t   * @returns {boolean}\n\t   * @private\n\t   */\n\t  function isElementUpgraded_(element, jsClass) {\n\t    var upgradedList = getUpgradedListOfElement_(element);\n\t    return upgradedList.indexOf(jsClass) !== -1;\n\t  }\n\t\n\t  /**\n\t   * Searches existing DOM for elements of our component type and upgrades them\n\t   * if they have not already been upgraded.\n\t   *\n\t   * @param {string=} optJsClass the programatic name of the element class we\n\t   * need to create a new instance of.\n\t   * @param {string=} optCssClass the name of the CSS class elements of this\n\t   * type will have.\n\t   */\n\t  function upgradeDomInternal(optJsClass, optCssClass) {\n\t    if (typeof optJsClass === 'undefined' &&\n\t        typeof optCssClass === 'undefined') {\n\t      for (var i = 0; i < registeredComponents_.length; i++) {\n\t        upgradeDomInternal(registeredComponents_[i].className,\n\t            registeredComponents_[i].cssClass);\n\t      }\n\t    } else {\n\t      var jsClass = /** @type {string} */ (optJsClass);\n\t      if (typeof optCssClass === 'undefined') {\n\t        var registeredClass = findRegisteredClass_(jsClass);\n\t        if (registeredClass) {\n\t          optCssClass = registeredClass.cssClass;\n\t        }\n\t      }\n\t\n\t      var elements = document.querySelectorAll('.' + optCssClass);\n\t      for (var n = 0; n < elements.length; n++) {\n\t        upgradeElementInternal(elements[n], jsClass);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Upgrades a specific element rather than all in the DOM.\n\t   *\n\t   * @param {!Element} element The element we wish to upgrade.\n\t   * @param {string=} optJsClass Optional name of the class we want to upgrade\n\t   * the element to.\n\t   */\n\t  function upgradeElementInternal(element, optJsClass) {\n\t    // Verify argument type.\n\t    if (!(typeof element === 'object' && element instanceof Element)) {\n\t      throw new Error('Invalid argument provided to upgrade MDL element.');\n\t    }\n\t    var upgradedList = getUpgradedListOfElement_(element);\n\t    var classesToUpgrade = [];\n\t    // If jsClass is not provided scan the registered components to find the\n\t    // ones matching the element's CSS classList.\n\t    if (!optJsClass) {\n\t      var classList = element.classList;\n\t      registeredComponents_.forEach(function(component) {\n\t        // Match CSS & Not to be upgraded & Not upgraded.\n\t        if (classList.contains(component.cssClass) &&\n\t            classesToUpgrade.indexOf(component) === -1 &&\n\t            !isElementUpgraded_(element, component.className)) {\n\t          classesToUpgrade.push(component);\n\t        }\n\t      });\n\t    } else if (!isElementUpgraded_(element, optJsClass)) {\n\t      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n\t    }\n\t\n\t    // Upgrade the element for each classes.\n\t    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n\t      registeredClass = classesToUpgrade[i];\n\t      if (registeredClass) {\n\t        // Mark element as upgraded.\n\t        upgradedList.push(registeredClass.className);\n\t        element.setAttribute('data-upgraded', upgradedList.join(','));\n\t        var instance = new registeredClass.classConstructor(element);\n\t        instance[componentConfigProperty_] = registeredClass;\n\t        createdComponents_.push(instance);\n\t        // Call any callbacks the user has registered with this component type.\n\t        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n\t          registeredClass.callbacks[j](element);\n\t        }\n\t\n\t        if (registeredClass.widget) {\n\t          // Assign per element instance for control over API\n\t          element[registeredClass.className] = instance;\n\t        }\n\t      } else {\n\t        throw new Error(\n\t          'Unable to find a registered component for the given class.');\n\t      }\n\t\n\t      var ev;\n\t      if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n\t        ev = new Event('mdl-componentupgraded', {\n\t          'bubbles': true, 'cancelable': false\n\t        });\n\t      } else {\n\t        ev = document.createEvent('Events');\n\t        ev.initEvent('mdl-componentupgraded', true, true);\n\t      }\n\t      element.dispatchEvent(ev);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Upgrades a specific list of elements rather than all in the DOM.\n\t   *\n\t   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n\t   * The elements we wish to upgrade.\n\t   */\n\t  function upgradeElementsInternal(elements) {\n\t    if (!Array.isArray(elements)) {\n\t      if (typeof elements.item === 'function') {\n\t        elements = Array.prototype.slice.call(/** @type {Array} */ (elements));\n\t      } else {\n\t        elements = [elements];\n\t      }\n\t    }\n\t    for (var i = 0, n = elements.length, element; i < n; i++) {\n\t      element = elements[i];\n\t      if (element instanceof HTMLElement) {\n\t        upgradeElementInternal(element);\n\t        if (element.children.length > 0) {\n\t          upgradeElementsInternal(element.children);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Registers a class for future use and attempts to upgrade existing DOM.\n\t   *\n\t   * @param {componentHandler.ComponentConfigPublic} config\n\t   */\n\t  function registerInternal(config) {\n\t    // In order to support both Closure-compiled and uncompiled code accessing\n\t    // this method, we need to allow for both the dot and array syntax for\n\t    // property access. You'll therefore see the `foo.bar || foo['bar']`\n\t    // pattern repeated across this method.\n\t    var widgetMissing = (typeof config.widget === 'undefined' &&\n\t        typeof config['widget'] === 'undefined');\n\t    var widget = true;\n\t\n\t    if (!widgetMissing) {\n\t      widget = config.widget || config['widget'];\n\t    }\n\t\n\t    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n\t      classConstructor: config.constructor || config['constructor'],\n\t      className: config.classAsString || config['classAsString'],\n\t      cssClass: config.cssClass || config['cssClass'],\n\t      widget: widget,\n\t      callbacks: []\n\t    });\n\t\n\t    registeredComponents_.forEach(function(item) {\n\t      if (item.cssClass === newConfig.cssClass) {\n\t        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n\t      }\n\t      if (item.className === newConfig.className) {\n\t        throw new Error('The provided className has already been registered');\n\t      }\n\t    });\n\t\n\t    if (config.constructor.prototype\n\t        .hasOwnProperty(componentConfigProperty_)) {\n\t      throw new Error(\n\t          'MDL component classes must not have ' + componentConfigProperty_ +\n\t          ' defined as a property.');\n\t    }\n\t\n\t    var found = findRegisteredClass_(config.classAsString, newConfig);\n\t\n\t    if (!found) {\n\t      registeredComponents_.push(newConfig);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Allows user to be alerted to any upgrades that are performed for a given\n\t   * component type\n\t   *\n\t   * @param {string} jsClass The class name of the MDL component we wish\n\t   * to hook into for any upgrades performed.\n\t   * @param {function(!HTMLElement)} callback The function to call upon an\n\t   * upgrade. This function should expect 1 parameter - the HTMLElement which\n\t   * got upgraded.\n\t   */\n\t  function registerUpgradedCallbackInternal(jsClass, callback) {\n\t    var regClass = findRegisteredClass_(jsClass);\n\t    if (regClass) {\n\t      regClass.callbacks.push(callback);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Upgrades all registered components found in the current DOM. This is\n\t   * automatically called on window load.\n\t   */\n\t  function upgradeAllRegisteredInternal() {\n\t    for (var n = 0; n < registeredComponents_.length; n++) {\n\t      upgradeDomInternal(registeredComponents_[n].className);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check the component for the downgrade method.\n\t   * Execute if found.\n\t   * Remove component from createdComponents list.\n\t   *\n\t   * @param {?componentHandler.Component} component\n\t   */\n\t  function deconstructComponentInternal(component) {\n\t    if (component) {\n\t      var componentIndex = createdComponents_.indexOf(component);\n\t      createdComponents_.splice(componentIndex, 1);\n\t\n\t      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n\t      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n\t      upgrades.splice(componentPlace, 1);\n\t      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\t\n\t      var ev;\n\t      if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n\t        ev = new Event('mdl-componentdowngraded', {\n\t          'bubbles': true, 'cancelable': false\n\t        });\n\t      } else {\n\t        ev = document.createEvent('Events');\n\t        ev.initEvent('mdl-componentdowngraded', true, true);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Downgrade either a given node, an array of nodes, or a NodeList.\n\t   *\n\t   * @param {!Node|!Array<!Node>|!NodeList} nodes\n\t   */\n\t  function downgradeNodesInternal(nodes) {\n\t    /**\n\t     * Auxiliary function to downgrade a single node.\n\t     * @param  {!Node} node the node to be downgraded\n\t     */\n\t    var downgradeNode = function(node) {\n\t      createdComponents_.filter(function(item) {\n\t        return item.element_ === node;\n\t      }).forEach(deconstructComponentInternal);\n\t    };\n\t    if (nodes instanceof Array || nodes instanceof NodeList) {\n\t      for (var n = 0; n < nodes.length; n++) {\n\t        downgradeNode(nodes[n]);\n\t      }\n\t    } else if (nodes instanceof Node) {\n\t      downgradeNode(nodes);\n\t    } else {\n\t      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n\t    }\n\t  }\n\t\n\t  // Now return the functions that should be made public with their publicly\n\t  // facing names...\n\t  return {\n\t    upgradeDom: upgradeDomInternal,\n\t    upgradeElement: upgradeElementInternal,\n\t    upgradeElements: upgradeElementsInternal,\n\t    upgradeAllRegistered: upgradeAllRegisteredInternal,\n\t    registerUpgradedCallback: registerUpgradedCallbackInternal,\n\t    register: registerInternal,\n\t    downgradeElements: downgradeNodesInternal\n\t  };\n\t})();\n\t\n\t/**\n\t * Describes the type of a registered component type managed by\n\t * componentHandler. Provided for benefit of the Closure compiler.\n\t *\n\t * @typedef {{\n\t *   constructor: Function,\n\t *   classAsString: string,\n\t *   cssClass: string,\n\t *   widget: (string|boolean|undefined)\n\t * }}\n\t */\n\tcomponentHandler.ComponentConfigPublic;  // jshint ignore:line\n\t\n\t/**\n\t * Describes the type of a registered component type managed by\n\t * componentHandler. Provided for benefit of the Closure compiler.\n\t *\n\t * @typedef {{\n\t *   constructor: !Function,\n\t *   className: string,\n\t *   cssClass: string,\n\t *   widget: (string|boolean),\n\t *   callbacks: !Array<function(!HTMLElement)>\n\t * }}\n\t */\n\tcomponentHandler.ComponentConfig;  // jshint ignore:line\n\t\n\t/**\n\t * Created component (i.e., upgraded element) type as managed by\n\t * componentHandler. Provided for benefit of the Closure compiler.\n\t *\n\t * @typedef {{\n\t *   element_: !HTMLElement,\n\t *   className: string,\n\t *   classAsString: string,\n\t *   cssClass: string,\n\t *   widget: string\n\t * }}\n\t */\n\tcomponentHandler.Component;  // jshint ignore:line\n\t\n\t// Export all symbols, for the benefit of Closure compiler.\n\t// No effect on uncompiled code.\n\tcomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\n\tcomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\n\tcomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\n\tcomponentHandler['upgradeAllRegistered'] =\n\t    componentHandler.upgradeAllRegistered;\n\tcomponentHandler['registerUpgradedCallback'] =\n\t    componentHandler.registerUpgradedCallback;\n\tcomponentHandler['register'] = componentHandler.register;\n\tcomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\n\twindow.componentHandler = componentHandler;\n\twindow['componentHandler'] = componentHandler;\n\t\n\twindow.addEventListener('load', function() {\n\t  'use strict';\n\t\n\t  /**\n\t   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n\t   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n\t   * components requiring JavaScript.\n\t   */\n\t  if ('classList' in document.createElement('div') &&\n\t      'querySelector' in document &&\n\t      'addEventListener' in window && Array.prototype.forEach) {\n\t    document.documentElement.classList.add('mdl-js');\n\t    componentHandler.upgradeAllRegistered();\n\t  } else {\n\t    /**\n\t     * Dummy function to avoid JS errors.\n\t     */\n\t    componentHandler.upgradeElement = function() {};\n\t    /**\n\t     * Dummy function to avoid JS errors.\n\t     */\n\t    componentHandler.register = function() {};\n\t  }\n\t});\n\t\n\t// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n\t// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n\t// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\t// requestAnimationFrame polyfill by Erik Möller.\n\t// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n\t// MIT license\n\tif (!Date.now) {\n\t    /**\n\t   * Date.now polyfill.\n\t   * @return {number} the current Date\n\t   */\n\t    Date.now = function () {\n\t        return new Date().getTime();\n\t    };\n\t    Date['now'] = Date.now;\n\t}\n\tvar vendors = [\n\t    'webkit',\n\t    'moz'\n\t];\n\tfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n\t    var vp = vendors[i];\n\t    window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n\t    window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n\t    window['requestAnimationFrame'] = window.requestAnimationFrame;\n\t    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n\t}\n\tif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n\t    var lastTime = 0;\n\t    /**\n\t   * requestAnimationFrame polyfill.\n\t   * @param  {!Function} callback the callback function.\n\t   */\n\t    window.requestAnimationFrame = function (callback) {\n\t        var now = Date.now();\n\t        var nextTime = Math.max(lastTime + 16, now);\n\t        return setTimeout(function () {\n\t            callback(lastTime = nextTime);\n\t        }, nextTime - now);\n\t    };\n\t    window.cancelAnimationFrame = clearTimeout;\n\t    window['requestAnimationFrame'] = window.requestAnimationFrame;\n\t    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n\t}\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for Button MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   */\n\tvar MaterialButton = function MaterialButton(element) {\n\t    this.element_ = element;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialButton'] = MaterialButton;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialButton.prototype.Constant_ = {};\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialButton.prototype.CssClasses_ = {\n\t    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n\t    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n\t    RIPPLE: 'mdl-ripple'\n\t};\n\t/**\n\t   * Handle blur of element.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialButton.prototype.blurHandler_ = function (event) {\n\t    if (event) {\n\t        this.element_.blur();\n\t    }\n\t};\n\t// Public methods.\n\t/**\n\t   * Disable button.\n\t   *\n\t   * @public\n\t   */\n\tMaterialButton.prototype.disable = function () {\n\t    this.element_.disabled = true;\n\t};\n\tMaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n\t/**\n\t   * Enable button.\n\t   *\n\t   * @public\n\t   */\n\tMaterialButton.prototype.enable = function () {\n\t    this.element_.disabled = false;\n\t};\n\tMaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialButton.prototype.init = function () {\n\t    if (this.element_) {\n\t        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n\t            var rippleContainer = document.createElement('span');\n\t            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n\t            this.rippleElement_ = document.createElement('span');\n\t            this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n\t            rippleContainer.appendChild(this.rippleElement_);\n\t            this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n\t            this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n\t            this.element_.appendChild(rippleContainer);\n\t        }\n\t        this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n\t        this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n\t        this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n\t    }\n\t};\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialButton,\n\t    classAsString: 'MaterialButton',\n\t    cssClass: 'mdl-js-button',\n\t    widget: true\n\t});\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for Checkbox MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   */\n\tvar MaterialCheckbox = function MaterialCheckbox(element) {\n\t    this.element_ = element;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialCheckbox'] = MaterialCheckbox;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialCheckbox.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialCheckbox.prototype.CssClasses_ = {\n\t    INPUT: 'mdl-checkbox__input',\n\t    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n\t    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n\t    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n\t    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n\t    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\t    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n\t    RIPPLE_CENTER: 'mdl-ripple--center',\n\t    RIPPLE: 'mdl-ripple',\n\t    IS_FOCUSED: 'is-focused',\n\t    IS_DISABLED: 'is-disabled',\n\t    IS_CHECKED: 'is-checked',\n\t    IS_UPGRADED: 'is-upgraded'\n\t};\n\t/**\n\t   * Handle change of state.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialCheckbox.prototype.onChange_ = function (event) {\n\t    this.updateClasses_();\n\t};\n\t/**\n\t   * Handle focus of element.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialCheckbox.prototype.onFocus_ = function (event) {\n\t    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n\t};\n\t/**\n\t   * Handle lost focus of element.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialCheckbox.prototype.onBlur_ = function (event) {\n\t    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n\t};\n\t/**\n\t   * Handle mouseup.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialCheckbox.prototype.onMouseUp_ = function (event) {\n\t    this.blur_();\n\t};\n\t/**\n\t   * Handle class updates.\n\t   *\n\t   * @private\n\t   */\n\tMaterialCheckbox.prototype.updateClasses_ = function () {\n\t    this.checkDisabled();\n\t    this.checkToggleState();\n\t};\n\t/**\n\t   * Add blur.\n\t   *\n\t   * @private\n\t   */\n\tMaterialCheckbox.prototype.blur_ = function () {\n\t    // TODO: figure out why there's a focus event being fired after our blur,\n\t    // so that we can avoid this hack.\n\t    window.setTimeout(function () {\n\t        this.inputElement_.blur();\n\t    }.bind(this), this.Constant_.TINY_TIMEOUT);\n\t};\n\t// Public methods.\n\t/**\n\t   * Check the inputs toggle state and update display.\n\t   *\n\t   * @public\n\t   */\n\tMaterialCheckbox.prototype.checkToggleState = function () {\n\t    if (this.inputElement_.checked) {\n\t        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n\t    } else {\n\t        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n\t    }\n\t};\n\tMaterialCheckbox.prototype['checkToggleState'] = MaterialCheckbox.prototype.checkToggleState;\n\t/**\n\t   * Check the inputs disabled state and update display.\n\t   *\n\t   * @public\n\t   */\n\tMaterialCheckbox.prototype.checkDisabled = function () {\n\t    if (this.inputElement_.disabled) {\n\t        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n\t    } else {\n\t        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n\t    }\n\t};\n\tMaterialCheckbox.prototype['checkDisabled'] = MaterialCheckbox.prototype.checkDisabled;\n\t/**\n\t   * Disable checkbox.\n\t   *\n\t   * @public\n\t   */\n\tMaterialCheckbox.prototype.disable = function () {\n\t    this.inputElement_.disabled = true;\n\t    this.updateClasses_();\n\t};\n\tMaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;\n\t/**\n\t   * Enable checkbox.\n\t   *\n\t   * @public\n\t   */\n\tMaterialCheckbox.prototype.enable = function () {\n\t    this.inputElement_.disabled = false;\n\t    this.updateClasses_();\n\t};\n\tMaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;\n\t/**\n\t   * Check checkbox.\n\t   *\n\t   * @public\n\t   */\n\tMaterialCheckbox.prototype.check = function () {\n\t    this.inputElement_.checked = true;\n\t    this.updateClasses_();\n\t};\n\tMaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;\n\t/**\n\t   * Uncheck checkbox.\n\t   *\n\t   * @public\n\t   */\n\tMaterialCheckbox.prototype.uncheck = function () {\n\t    this.inputElement_.checked = false;\n\t    this.updateClasses_();\n\t};\n\tMaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialCheckbox.prototype.init = function () {\n\t    if (this.element_) {\n\t        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\t        var boxOutline = document.createElement('span');\n\t        boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n\t        var tickContainer = document.createElement('span');\n\t        tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n\t        var tickOutline = document.createElement('span');\n\t        tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n\t        boxOutline.appendChild(tickOutline);\n\t        this.element_.appendChild(tickContainer);\n\t        this.element_.appendChild(boxOutline);\n\t        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n\t            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\t            this.rippleContainerElement_ = document.createElement('span');\n\t            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n\t            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n\t            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n\t            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n\t            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n\t            var ripple = document.createElement('span');\n\t            ripple.classList.add(this.CssClasses_.RIPPLE);\n\t            this.rippleContainerElement_.appendChild(ripple);\n\t            this.element_.appendChild(this.rippleContainerElement_);\n\t        }\n\t        this.boundInputOnChange = this.onChange_.bind(this);\n\t        this.boundInputOnFocus = this.onFocus_.bind(this);\n\t        this.boundInputOnBlur = this.onBlur_.bind(this);\n\t        this.boundElementMouseUp = this.onMouseUp_.bind(this);\n\t        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n\t        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n\t        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n\t        this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n\t        this.updateClasses_();\n\t        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n\t    }\n\t};\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialCheckbox,\n\t    classAsString: 'MaterialCheckbox',\n\t    cssClass: 'mdl-js-checkbox',\n\t    widget: true\n\t});\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for icon toggle MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   */\n\tvar MaterialIconToggle = function MaterialIconToggle(element) {\n\t    this.element_ = element;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialIconToggle'] = MaterialIconToggle;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialIconToggle.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialIconToggle.prototype.CssClasses_ = {\n\t    INPUT: 'mdl-icon-toggle__input',\n\t    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n\t    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\t    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n\t    RIPPLE_CENTER: 'mdl-ripple--center',\n\t    RIPPLE: 'mdl-ripple',\n\t    IS_FOCUSED: 'is-focused',\n\t    IS_DISABLED: 'is-disabled',\n\t    IS_CHECKED: 'is-checked'\n\t};\n\t/**\n\t   * Handle change of state.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialIconToggle.prototype.onChange_ = function (event) {\n\t    this.updateClasses_();\n\t};\n\t/**\n\t   * Handle focus of element.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialIconToggle.prototype.onFocus_ = function (event) {\n\t    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n\t};\n\t/**\n\t   * Handle lost focus of element.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialIconToggle.prototype.onBlur_ = function (event) {\n\t    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n\t};\n\t/**\n\t   * Handle mouseup.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialIconToggle.prototype.onMouseUp_ = function (event) {\n\t    this.blur_();\n\t};\n\t/**\n\t   * Handle class updates.\n\t   *\n\t   * @private\n\t   */\n\tMaterialIconToggle.prototype.updateClasses_ = function () {\n\t    this.checkDisabled();\n\t    this.checkToggleState();\n\t};\n\t/**\n\t   * Add blur.\n\t   *\n\t   * @private\n\t   */\n\tMaterialIconToggle.prototype.blur_ = function () {\n\t    // TODO: figure out why there's a focus event being fired after our blur,\n\t    // so that we can avoid this hack.\n\t    window.setTimeout(function () {\n\t        this.inputElement_.blur();\n\t    }.bind(this), this.Constant_.TINY_TIMEOUT);\n\t};\n\t// Public methods.\n\t/**\n\t   * Check the inputs toggle state and update display.\n\t   *\n\t   * @public\n\t   */\n\tMaterialIconToggle.prototype.checkToggleState = function () {\n\t    if (this.inputElement_.checked) {\n\t        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n\t    } else {\n\t        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n\t    }\n\t};\n\tMaterialIconToggle.prototype['checkToggleState'] = MaterialIconToggle.prototype.checkToggleState;\n\t/**\n\t   * Check the inputs disabled state and update display.\n\t   *\n\t   * @public\n\t   */\n\tMaterialIconToggle.prototype.checkDisabled = function () {\n\t    if (this.inputElement_.disabled) {\n\t        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n\t    } else {\n\t        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n\t    }\n\t};\n\tMaterialIconToggle.prototype['checkDisabled'] = MaterialIconToggle.prototype.checkDisabled;\n\t/**\n\t   * Disable icon toggle.\n\t   *\n\t   * @public\n\t   */\n\tMaterialIconToggle.prototype.disable = function () {\n\t    this.inputElement_.disabled = true;\n\t    this.updateClasses_();\n\t};\n\tMaterialIconToggle.prototype['disable'] = MaterialIconToggle.prototype.disable;\n\t/**\n\t   * Enable icon toggle.\n\t   *\n\t   * @public\n\t   */\n\tMaterialIconToggle.prototype.enable = function () {\n\t    this.inputElement_.disabled = false;\n\t    this.updateClasses_();\n\t};\n\tMaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;\n\t/**\n\t   * Check icon toggle.\n\t   *\n\t   * @public\n\t   */\n\tMaterialIconToggle.prototype.check = function () {\n\t    this.inputElement_.checked = true;\n\t    this.updateClasses_();\n\t};\n\tMaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;\n\t/**\n\t   * Uncheck icon toggle.\n\t   *\n\t   * @public\n\t   */\n\tMaterialIconToggle.prototype.uncheck = function () {\n\t    this.inputElement_.checked = false;\n\t    this.updateClasses_();\n\t};\n\tMaterialIconToggle.prototype['uncheck'] = MaterialIconToggle.prototype.uncheck;\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialIconToggle.prototype.init = function () {\n\t    if (this.element_) {\n\t        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\t        if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n\t            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\t            this.rippleContainerElement_ = document.createElement('span');\n\t            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n\t            this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n\t            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n\t            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n\t            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n\t            var ripple = document.createElement('span');\n\t            ripple.classList.add(this.CssClasses_.RIPPLE);\n\t            this.rippleContainerElement_.appendChild(ripple);\n\t            this.element_.appendChild(this.rippleContainerElement_);\n\t        }\n\t        this.boundInputOnChange = this.onChange_.bind(this);\n\t        this.boundInputOnFocus = this.onFocus_.bind(this);\n\t        this.boundInputOnBlur = this.onBlur_.bind(this);\n\t        this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n\t        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n\t        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n\t        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n\t        this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n\t        this.updateClasses_();\n\t        this.element_.classList.add('is-upgraded');\n\t    }\n\t};\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialIconToggle,\n\t    classAsString: 'MaterialIconToggle',\n\t    cssClass: 'mdl-js-icon-toggle',\n\t    widget: true\n\t});\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for dropdown MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   */\n\tvar MaterialMenu = function MaterialMenu(element) {\n\t    this.element_ = element;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialMenu'] = MaterialMenu;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialMenu.prototype.Constant_ = {\n\t    // Total duration of the menu animation.\n\t    TRANSITION_DURATION_SECONDS: 0.3,\n\t    // The fraction of the total duration we want to use for menu item animations.\n\t    TRANSITION_DURATION_FRACTION: 0.8,\n\t    // How long the menu stays open after choosing an option (so the user can see\n\t    // the ripple).\n\t    CLOSE_TIMEOUT: 150\n\t};\n\t/**\n\t   * Keycodes, for code readability.\n\t   *\n\t   * @enum {number}\n\t   * @private\n\t   */\n\tMaterialMenu.prototype.Keycodes_ = {\n\t    ENTER: 13,\n\t    ESCAPE: 27,\n\t    SPACE: 32,\n\t    UP_ARROW: 38,\n\t    DOWN_ARROW: 40\n\t};\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialMenu.prototype.CssClasses_ = {\n\t    CONTAINER: 'mdl-menu__container',\n\t    OUTLINE: 'mdl-menu__outline',\n\t    ITEM: 'mdl-menu__item',\n\t    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n\t    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n\t    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\t    RIPPLE: 'mdl-ripple',\n\t    // Statuses\n\t    IS_UPGRADED: 'is-upgraded',\n\t    IS_VISIBLE: 'is-visible',\n\t    IS_ANIMATING: 'is-animating',\n\t    // Alignment options\n\t    BOTTOM_LEFT: 'mdl-menu--bottom-left',\n\t    // This is the default.\n\t    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n\t    TOP_LEFT: 'mdl-menu--top-left',\n\t    TOP_RIGHT: 'mdl-menu--top-right',\n\t    UNALIGNED: 'mdl-menu--unaligned'\n\t};\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialMenu.prototype.init = function () {\n\t    if (this.element_) {\n\t        // Create container for the menu.\n\t        var container = document.createElement('div');\n\t        container.classList.add(this.CssClasses_.CONTAINER);\n\t        this.element_.parentElement.insertBefore(container, this.element_);\n\t        this.element_.parentElement.removeChild(this.element_);\n\t        container.appendChild(this.element_);\n\t        this.container_ = container;\n\t        // Create outline for the menu (shadow and background).\n\t        var outline = document.createElement('div');\n\t        outline.classList.add(this.CssClasses_.OUTLINE);\n\t        this.outline_ = outline;\n\t        container.insertBefore(outline, this.element_);\n\t        // Find the \"for\" element and bind events to it.\n\t        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n\t        var forEl = null;\n\t        if (forElId) {\n\t            forEl = document.getElementById(forElId);\n\t            if (forEl) {\n\t                this.forElement_ = forEl;\n\t                forEl.addEventListener('click', this.handleForClick_.bind(this));\n\t                forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));\n\t            }\n\t        }\n\t        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\t        this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n\t        this.boundItemClick_ = this.handleItemClick_.bind(this);\n\t        for (var i = 0; i < items.length; i++) {\n\t            // Add a listener to each menu item.\n\t            items[i].addEventListener('click', this.boundItemClick_);\n\t            // Add a tab index to each menu item.\n\t            items[i].tabIndex = '-1';\n\t            // Add a keyboard listener to each menu item.\n\t            items[i].addEventListener('keydown', this.boundItemKeydown_);\n\t        }\n\t        // Add ripple classes to each item, if the user has enabled ripples.\n\t        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n\t            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\t            for (i = 0; i < items.length; i++) {\n\t                var item = items[i];\n\t                var rippleContainer = document.createElement('span');\n\t                rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n\t                var ripple = document.createElement('span');\n\t                ripple.classList.add(this.CssClasses_.RIPPLE);\n\t                rippleContainer.appendChild(ripple);\n\t                item.appendChild(rippleContainer);\n\t                item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n\t            }\n\t        }\n\t        // Copy alignment classes to the container, so the outline can use them.\n\t        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n\t            this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n\t        }\n\t        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n\t            this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n\t        }\n\t        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n\t            this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n\t        }\n\t        if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n\t            this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n\t        }\n\t        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n\t            this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n\t        }\n\t        container.classList.add(this.CssClasses_.IS_UPGRADED);\n\t    }\n\t};\n\t/**\n\t   * Handles a click on the \"for\" element, by positioning the menu and then\n\t   * toggling it.\n\t   *\n\t   * @param {Event} evt The event that fired.\n\t   * @private\n\t   */\n\tMaterialMenu.prototype.handleForClick_ = function (evt) {\n\t    if (this.element_ && this.forElement_) {\n\t        var rect = this.forElement_.getBoundingClientRect();\n\t        var forRect = this.forElement_.parentElement.getBoundingClientRect();\n\t        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n\t        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n\t            // Position below the \"for\" element, aligned to its right.\n\t            this.container_.style.right = forRect.right - rect.right + 'px';\n\t            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n\t        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n\t            // Position above the \"for\" element, aligned to its left.\n\t            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n\t            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n\t        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n\t            // Position above the \"for\" element, aligned to its right.\n\t            this.container_.style.right = forRect.right - rect.right + 'px';\n\t            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n\t        } else {\n\t            // Default: position below the \"for\" element, aligned to its left.\n\t            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n\t            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n\t        }\n\t    }\n\t    this.toggle(evt);\n\t};\n\t/**\n\t   * Handles a keyboard event on the \"for\" element.\n\t   *\n\t   * @param {Event} evt The event that fired.\n\t   * @private\n\t   */\n\tMaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {\n\t    if (this.element_ && this.container_ && this.forElement_) {\n\t        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n\t        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n\t            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n\t                evt.preventDefault();\n\t                items[items.length - 1].focus();\n\t            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n\t                evt.preventDefault();\n\t                items[0].focus();\n\t            }\n\t        }\n\t    }\n\t};\n\t/**\n\t   * Handles a keyboard event on an item.\n\t   *\n\t   * @param {Event} evt The event that fired.\n\t   * @private\n\t   */\n\tMaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {\n\t    if (this.element_ && this.container_) {\n\t        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n\t        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n\t            var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n\t            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n\t                evt.preventDefault();\n\t                if (currentIndex > 0) {\n\t                    items[currentIndex - 1].focus();\n\t                } else {\n\t                    items[items.length - 1].focus();\n\t                }\n\t            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n\t                evt.preventDefault();\n\t                if (items.length > currentIndex + 1) {\n\t                    items[currentIndex + 1].focus();\n\t                } else {\n\t                    items[0].focus();\n\t                }\n\t            } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n\t                evt.preventDefault();\n\t                // Send mousedown and mouseup to trigger ripple.\n\t                var e = new MouseEvent('mousedown');\n\t                evt.target.dispatchEvent(e);\n\t                e = new MouseEvent('mouseup');\n\t                evt.target.dispatchEvent(e);\n\t                // Send click.\n\t                evt.target.click();\n\t            } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n\t                evt.preventDefault();\n\t                this.hide();\n\t            }\n\t        }\n\t    }\n\t};\n\t/**\n\t   * Handles a click event on an item.\n\t   *\n\t   * @param {Event} evt The event that fired.\n\t   * @private\n\t   */\n\tMaterialMenu.prototype.handleItemClick_ = function (evt) {\n\t    if (evt.target.hasAttribute('disabled')) {\n\t        evt.stopPropagation();\n\t    } else {\n\t        // Wait some time before closing menu, so the user can see the ripple.\n\t        this.closing_ = true;\n\t        window.setTimeout(function (evt) {\n\t            this.hide();\n\t            this.closing_ = false;\n\t        }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n\t    }\n\t};\n\t/**\n\t   * Calculates the initial clip (for opening the menu) or final clip (for closing\n\t   * it), and applies it. This allows us to animate from or to the correct point,\n\t   * that is, the point it's aligned to in the \"for\" element.\n\t   *\n\t   * @param {number} height Height of the clip rectangle\n\t   * @param {number} width Width of the clip rectangle\n\t   * @private\n\t   */\n\tMaterialMenu.prototype.applyClip_ = function (height, width) {\n\t    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n\t        // Do not clip.\n\t        this.element_.style.clip = '';\n\t    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n\t        // Clip to the top right corner of the menu.\n\t        this.element_.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n\t    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n\t        // Clip to the bottom left corner of the menu.\n\t        this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n\t    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n\t        // Clip to the bottom right corner of the menu.\n\t        this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n\t    } else {\n\t        // Default: do not clip (same as clipping to the top left corner).\n\t        this.element_.style.clip = '';\n\t    }\n\t};\n\t/**\n\t   * Cleanup function to remove animation listeners.\n\t   *\n\t   * @param {Event} evt\n\t   * @private\n\t   */\n\tMaterialMenu.prototype.removeAnimationEndListener_ = function (evt) {\n\t    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n\t};\n\t/**\n\t   * Adds an event listener to clean up after the animation ends.\n\t   *\n\t   * @private\n\t   */\n\tMaterialMenu.prototype.addAnimationEndListener_ = function () {\n\t    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n\t    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n\t};\n\t/**\n\t   * Displays the menu.\n\t   *\n\t   * @public\n\t   */\n\tMaterialMenu.prototype.show = function (evt) {\n\t    if (this.element_ && this.container_ && this.outline_) {\n\t        // Measure the inner element.\n\t        var height = this.element_.getBoundingClientRect().height;\n\t        var width = this.element_.getBoundingClientRect().width;\n\t        // Apply the inner element's size to the container and outline.\n\t        this.container_.style.width = width + 'px';\n\t        this.container_.style.height = height + 'px';\n\t        this.outline_.style.width = width + 'px';\n\t        this.outline_.style.height = height + 'px';\n\t        var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION;\n\t        // Calculate transition delays for individual menu items, so that they fade\n\t        // in one at a time.\n\t        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\t        for (var i = 0; i < items.length; i++) {\n\t            var itemDelay = null;\n\t            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n\t                itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';\n\t            } else {\n\t                itemDelay = items[i].offsetTop / height * transitionDuration + 's';\n\t            }\n\t            items[i].style.transitionDelay = itemDelay;\n\t        }\n\t        // Apply the initial clip to the text before we start animating.\n\t        this.applyClip_(height, width);\n\t        // Wait for the next frame, turn on animation, and apply the final clip.\n\t        // Also make it visible. This triggers the transitions.\n\t        window.requestAnimationFrame(function () {\n\t            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n\t            this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n\t            this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n\t        }.bind(this));\n\t        // Clean up after the animation is complete.\n\t        this.addAnimationEndListener_();\n\t        // Add a click listener to the document, to close the menu.\n\t        var callback = function (e) {\n\t            // Check to see if the document is processing the same event that\n\t            // displayed the menu in the first place. If so, do nothing.\n\t            // Also check to see if the menu is in the process of closing itself, and\n\t            // do nothing in that case.\n\t            // Also check if the clicked element is a menu item\n\t            // if so, do nothing.\n\t            if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n\t                document.removeEventListener('click', callback);\n\t                this.hide();\n\t            }\n\t        }.bind(this);\n\t        document.addEventListener('click', callback);\n\t    }\n\t};\n\tMaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\n\t/**\n\t   * Hides the menu.\n\t   *\n\t   * @public\n\t   */\n\tMaterialMenu.prototype.hide = function () {\n\t    if (this.element_ && this.container_ && this.outline_) {\n\t        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n\t        // Remove all transition delays; menu items fade out concurrently.\n\t        for (var i = 0; i < items.length; i++) {\n\t            items[i].style.removeProperty('transition-delay');\n\t        }\n\t        // Measure the inner element.\n\t        var rect = this.element_.getBoundingClientRect();\n\t        var height = rect.height;\n\t        var width = rect.width;\n\t        // Turn on animation, and apply the final clip. Also make invisible.\n\t        // This triggers the transitions.\n\t        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n\t        this.applyClip_(height, width);\n\t        this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n\t        // Clean up after the animation is complete.\n\t        this.addAnimationEndListener_();\n\t    }\n\t};\n\tMaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\n\t/**\n\t   * Displays or hides the menu, depending on current state.\n\t   *\n\t   * @public\n\t   */\n\tMaterialMenu.prototype.toggle = function (evt) {\n\t    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n\t        this.hide();\n\t    } else {\n\t        this.show(evt);\n\t    }\n\t};\n\tMaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialMenu,\n\t    classAsString: 'MaterialMenu',\n\t    cssClass: 'mdl-js-menu',\n\t    widget: true\n\t});\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for Progress MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   */\n\tvar MaterialProgress = function MaterialProgress(element) {\n\t    this.element_ = element;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialProgress'] = MaterialProgress;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialProgress.prototype.Constant_ = {};\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialProgress.prototype.CssClasses_ = { INDETERMINATE_CLASS: 'mdl-progress__indeterminate' };\n\t/**\n\t   * Set the current progress of the progressbar.\n\t   *\n\t   * @param {number} p Percentage of the progress (0-100)\n\t   * @public\n\t   */\n\tMaterialProgress.prototype.setProgress = function (p) {\n\t    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n\t        return;\n\t    }\n\t    this.progressbar_.style.width = p + '%';\n\t};\n\tMaterialProgress.prototype['setProgress'] = MaterialProgress.prototype.setProgress;\n\t/**\n\t   * Set the current progress of the buffer.\n\t   *\n\t   * @param {number} p Percentage of the buffer (0-100)\n\t   * @public\n\t   */\n\tMaterialProgress.prototype.setBuffer = function (p) {\n\t    this.bufferbar_.style.width = p + '%';\n\t    this.auxbar_.style.width = 100 - p + '%';\n\t};\n\tMaterialProgress.prototype['setBuffer'] = MaterialProgress.prototype.setBuffer;\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialProgress.prototype.init = function () {\n\t    if (this.element_) {\n\t        var el = document.createElement('div');\n\t        el.className = 'progressbar bar bar1';\n\t        this.element_.appendChild(el);\n\t        this.progressbar_ = el;\n\t        el = document.createElement('div');\n\t        el.className = 'bufferbar bar bar2';\n\t        this.element_.appendChild(el);\n\t        this.bufferbar_ = el;\n\t        el = document.createElement('div');\n\t        el.className = 'auxbar bar bar3';\n\t        this.element_.appendChild(el);\n\t        this.auxbar_ = el;\n\t        this.progressbar_.style.width = '0%';\n\t        this.bufferbar_.style.width = '100%';\n\t        this.auxbar_.style.width = '0%';\n\t        this.element_.classList.add('is-upgraded');\n\t    }\n\t};\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialProgress,\n\t    classAsString: 'MaterialProgress',\n\t    cssClass: 'mdl-js-progress',\n\t    widget: true\n\t});\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for Radio MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   */\n\tvar MaterialRadio = function MaterialRadio(element) {\n\t    this.element_ = element;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialRadio'] = MaterialRadio;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialRadio.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialRadio.prototype.CssClasses_ = {\n\t    IS_FOCUSED: 'is-focused',\n\t    IS_DISABLED: 'is-disabled',\n\t    IS_CHECKED: 'is-checked',\n\t    IS_UPGRADED: 'is-upgraded',\n\t    JS_RADIO: 'mdl-js-radio',\n\t    RADIO_BTN: 'mdl-radio__button',\n\t    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n\t    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n\t    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n\t    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\t    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n\t    RIPPLE_CENTER: 'mdl-ripple--center',\n\t    RIPPLE: 'mdl-ripple'\n\t};\n\t/**\n\t   * Handle change of state.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialRadio.prototype.onChange_ = function (event) {\n\t    // Since other radio buttons don't get change events, we need to look for\n\t    // them to update their classes.\n\t    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n\t    for (var i = 0; i < radios.length; i++) {\n\t        var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n\t        // Different name == different group, so no point updating those.\n\t        if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n\t            radios[i]['MaterialRadio'].updateClasses_();\n\t        }\n\t    }\n\t};\n\t/**\n\t   * Handle focus.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialRadio.prototype.onFocus_ = function (event) {\n\t    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n\t};\n\t/**\n\t   * Handle lost focus.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialRadio.prototype.onBlur_ = function (event) {\n\t    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n\t};\n\t/**\n\t   * Handle mouseup.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialRadio.prototype.onMouseup_ = function (event) {\n\t    this.blur_();\n\t};\n\t/**\n\t   * Update classes.\n\t   *\n\t   * @private\n\t   */\n\tMaterialRadio.prototype.updateClasses_ = function () {\n\t    this.checkDisabled();\n\t    this.checkToggleState();\n\t};\n\t/**\n\t   * Add blur.\n\t   *\n\t   * @private\n\t   */\n\tMaterialRadio.prototype.blur_ = function () {\n\t    // TODO: figure out why there's a focus event being fired after our blur,\n\t    // so that we can avoid this hack.\n\t    window.setTimeout(function () {\n\t        this.btnElement_.blur();\n\t    }.bind(this), this.Constant_.TINY_TIMEOUT);\n\t};\n\t// Public methods.\n\t/**\n\t   * Check the components disabled state.\n\t   *\n\t   * @public\n\t   */\n\tMaterialRadio.prototype.checkDisabled = function () {\n\t    if (this.btnElement_.disabled) {\n\t        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n\t    } else {\n\t        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n\t    }\n\t};\n\tMaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled;\n\t/**\n\t   * Check the components toggled state.\n\t   *\n\t   * @public\n\t   */\n\tMaterialRadio.prototype.checkToggleState = function () {\n\t    if (this.btnElement_.checked) {\n\t        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n\t    } else {\n\t        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n\t    }\n\t};\n\tMaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState;\n\t/**\n\t   * Disable radio.\n\t   *\n\t   * @public\n\t   */\n\tMaterialRadio.prototype.disable = function () {\n\t    this.btnElement_.disabled = true;\n\t    this.updateClasses_();\n\t};\n\tMaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\n\t/**\n\t   * Enable radio.\n\t   *\n\t   * @public\n\t   */\n\tMaterialRadio.prototype.enable = function () {\n\t    this.btnElement_.disabled = false;\n\t    this.updateClasses_();\n\t};\n\tMaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\n\t/**\n\t   * Check radio.\n\t   *\n\t   * @public\n\t   */\n\tMaterialRadio.prototype.check = function () {\n\t    this.btnElement_.checked = true;\n\t    this.updateClasses_();\n\t};\n\tMaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\n\t/**\n\t   * Uncheck radio.\n\t   *\n\t   * @public\n\t   */\n\tMaterialRadio.prototype.uncheck = function () {\n\t    this.btnElement_.checked = false;\n\t    this.updateClasses_();\n\t};\n\tMaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialRadio.prototype.init = function () {\n\t    if (this.element_) {\n\t        this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n\t        this.boundChangeHandler_ = this.onChange_.bind(this);\n\t        this.boundFocusHandler_ = this.onChange_.bind(this);\n\t        this.boundBlurHandler_ = this.onBlur_.bind(this);\n\t        this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n\t        var outerCircle = document.createElement('span');\n\t        outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n\t        var innerCircle = document.createElement('span');\n\t        innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n\t        this.element_.appendChild(outerCircle);\n\t        this.element_.appendChild(innerCircle);\n\t        var rippleContainer;\n\t        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n\t            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\t            rippleContainer = document.createElement('span');\n\t            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n\t            rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n\t            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n\t            rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n\t            var ripple = document.createElement('span');\n\t            ripple.classList.add(this.CssClasses_.RIPPLE);\n\t            rippleContainer.appendChild(ripple);\n\t            this.element_.appendChild(rippleContainer);\n\t        }\n\t        this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n\t        this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n\t        this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n\t        this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n\t        this.updateClasses_();\n\t        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n\t    }\n\t};\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialRadio,\n\t    classAsString: 'MaterialRadio',\n\t    cssClass: 'mdl-js-radio',\n\t    widget: true\n\t});\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for Slider MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   */\n\tvar MaterialSlider = function MaterialSlider(element) {\n\t    this.element_ = element;\n\t    // Browser feature detection.\n\t    this.isIE_ = window.navigator.msPointerEnabled;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialSlider'] = MaterialSlider;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialSlider.prototype.Constant_ = {};\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialSlider.prototype.CssClasses_ = {\n\t    IE_CONTAINER: 'mdl-slider__ie-container',\n\t    SLIDER_CONTAINER: 'mdl-slider__container',\n\t    BACKGROUND_FLEX: 'mdl-slider__background-flex',\n\t    BACKGROUND_LOWER: 'mdl-slider__background-lower',\n\t    BACKGROUND_UPPER: 'mdl-slider__background-upper',\n\t    IS_LOWEST_VALUE: 'is-lowest-value',\n\t    IS_UPGRADED: 'is-upgraded'\n\t};\n\t/**\n\t   * Handle input on element.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialSlider.prototype.onInput_ = function (event) {\n\t    this.updateValueStyles_();\n\t};\n\t/**\n\t   * Handle change on element.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialSlider.prototype.onChange_ = function (event) {\n\t    this.updateValueStyles_();\n\t};\n\t/**\n\t   * Handle mouseup on element.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialSlider.prototype.onMouseUp_ = function (event) {\n\t    event.target.blur();\n\t};\n\t/**\n\t   * Handle mousedown on container element.\n\t   * This handler is purpose is to not require the use to click\n\t   * exactly on the 2px slider element, as FireFox seems to be very\n\t   * strict about this.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   * @suppress {missingProperties}\n\t   */\n\tMaterialSlider.prototype.onContainerMouseDown_ = function (event) {\n\t    // If this click is not on the parent element (but rather some child)\n\t    // ignore. It may still bubble up.\n\t    if (event.target !== this.element_.parentElement) {\n\t        return;\n\t    }\n\t    // Discard the original event and create a new event that\n\t    // is on the slider element.\n\t    event.preventDefault();\n\t    var newEvent = new MouseEvent('mousedown', {\n\t        target: event.target,\n\t        buttons: event.buttons,\n\t        clientX: event.clientX,\n\t        clientY: this.element_.getBoundingClientRect().y\n\t    });\n\t    this.element_.dispatchEvent(newEvent);\n\t};\n\t/**\n\t   * Handle updating of values.\n\t   *\n\t   * @private\n\t   */\n\tMaterialSlider.prototype.updateValueStyles_ = function () {\n\t    // Calculate and apply percentages to div structure behind slider.\n\t    var fraction = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min);\n\t    if (fraction === 0) {\n\t        this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n\t    } else {\n\t        this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n\t    }\n\t    if (!this.isIE_) {\n\t        this.backgroundLower_.style.flex = fraction;\n\t        this.backgroundLower_.style.webkitFlex = fraction;\n\t        this.backgroundUpper_.style.flex = 1 - fraction;\n\t        this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n\t    }\n\t};\n\t// Public methods.\n\t/**\n\t   * Disable slider.\n\t   *\n\t   * @public\n\t   */\n\tMaterialSlider.prototype.disable = function () {\n\t    this.element_.disabled = true;\n\t};\n\tMaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable;\n\t/**\n\t   * Enable slider.\n\t   *\n\t   * @public\n\t   */\n\tMaterialSlider.prototype.enable = function () {\n\t    this.element_.disabled = false;\n\t};\n\tMaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable;\n\t/**\n\t   * Update slider value.\n\t   *\n\t   * @param {number} value The value to which to set the control (optional).\n\t   * @public\n\t   */\n\tMaterialSlider.prototype.change = function (value) {\n\t    if (typeof value !== 'undefined') {\n\t        this.element_.value = value;\n\t    }\n\t    this.updateValueStyles_();\n\t};\n\tMaterialSlider.prototype['change'] = MaterialSlider.prototype.change;\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialSlider.prototype.init = function () {\n\t    if (this.element_) {\n\t        if (this.isIE_) {\n\t            // Since we need to specify a very large height in IE due to\n\t            // implementation limitations, we add a parent here that trims it down to\n\t            // a reasonable size.\n\t            var containerIE = document.createElement('div');\n\t            containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n\t            this.element_.parentElement.insertBefore(containerIE, this.element_);\n\t            this.element_.parentElement.removeChild(this.element_);\n\t            containerIE.appendChild(this.element_);\n\t        } else {\n\t            // For non-IE browsers, we need a div structure that sits behind the\n\t            // slider and allows us to style the left and right sides of it with\n\t            // different colors.\n\t            var container = document.createElement('div');\n\t            container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n\t            this.element_.parentElement.insertBefore(container, this.element_);\n\t            this.element_.parentElement.removeChild(this.element_);\n\t            container.appendChild(this.element_);\n\t            var backgroundFlex = document.createElement('div');\n\t            backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n\t            container.appendChild(backgroundFlex);\n\t            this.backgroundLower_ = document.createElement('div');\n\t            this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n\t            backgroundFlex.appendChild(this.backgroundLower_);\n\t            this.backgroundUpper_ = document.createElement('div');\n\t            this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n\t            backgroundFlex.appendChild(this.backgroundUpper_);\n\t        }\n\t        this.boundInputHandler = this.onInput_.bind(this);\n\t        this.boundChangeHandler = this.onChange_.bind(this);\n\t        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n\t        this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\n\t        this.element_.addEventListener('input', this.boundInputHandler);\n\t        this.element_.addEventListener('change', this.boundChangeHandler);\n\t        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n\t        this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\n\t        this.updateValueStyles_();\n\t        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n\t    }\n\t};\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialSlider,\n\t    classAsString: 'MaterialSlider',\n\t    cssClass: 'mdl-js-slider',\n\t    widget: true\n\t});\n\t/**\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for Snackbar MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   */\n\tvar MaterialSnackbar = function MaterialSnackbar(element) {\n\t    this.element_ = element;\n\t    this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);\n\t    this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);\n\t    if (!this.textElement_) {\n\t        throw new Error('There must be a message element for a snackbar.');\n\t    }\n\t    if (!this.actionElement_) {\n\t        throw new Error('There must be an action element for a snackbar.');\n\t    }\n\t    this.active = false;\n\t    this.actionHandler_ = undefined;\n\t    this.message_ = undefined;\n\t    this.actionText_ = undefined;\n\t    this.queuedNotifications_ = [];\n\t    this.setActionHidden_(true);\n\t};\n\twindow['MaterialSnackbar'] = MaterialSnackbar;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialSnackbar.prototype.Constant_ = {\n\t    // The duration of the snackbar show/hide animation, in ms.\n\t    ANIMATION_LENGTH: 250\n\t};\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialSnackbar.prototype.cssClasses_ = {\n\t    SNACKBAR: 'mdl-snackbar',\n\t    MESSAGE: 'mdl-snackbar__text',\n\t    ACTION: 'mdl-snackbar__action',\n\t    ACTIVE: 'mdl-snackbar--active'\n\t};\n\t/**\n\t   * Display the snackbar.\n\t   *\n\t   * @private\n\t   */\n\tMaterialSnackbar.prototype.displaySnackbar_ = function () {\n\t    this.element_.setAttribute('aria-hidden', 'true');\n\t    if (this.actionHandler_) {\n\t        this.actionElement_.textContent = this.actionText_;\n\t        this.actionElement_.addEventListener('click', this.actionHandler_);\n\t        this.setActionHidden_(false);\n\t    }\n\t    this.textElement_.textContent = this.message_;\n\t    this.element_.classList.add(this.cssClasses_.ACTIVE);\n\t    this.element_.setAttribute('aria-hidden', 'false');\n\t    setTimeout(this.cleanup_.bind(this), this.timeout_);\n\t};\n\t/**\n\t   * Show the snackbar.\n\t   *\n\t   * @param {Object} data The data for the notification.\n\t   * @public\n\t   */\n\tMaterialSnackbar.prototype.showSnackbar = function (data) {\n\t    if (data === undefined) {\n\t        throw new Error('Please provide a data object with at least a message to display.');\n\t    }\n\t    if (data['message'] === undefined) {\n\t        throw new Error('Please provide a message to be displayed.');\n\t    }\n\t    if (data['actionHandler'] && !data['actionText']) {\n\t        throw new Error('Please provide action text with the handler.');\n\t    }\n\t    if (this.active) {\n\t        this.queuedNotifications_.push(data);\n\t    } else {\n\t        this.active = true;\n\t        this.message_ = data['message'];\n\t        if (data['timeout']) {\n\t            this.timeout_ = data['timeout'];\n\t        } else {\n\t            this.timeout_ = 2750;\n\t        }\n\t        if (data['actionHandler']) {\n\t            this.actionHandler_ = data['actionHandler'];\n\t        }\n\t        if (data['actionText']) {\n\t            this.actionText_ = data['actionText'];\n\t        }\n\t        this.displaySnackbar_();\n\t    }\n\t};\n\tMaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar;\n\t/**\n\t   * Check if the queue has items within it.\n\t   * If it does, display the next entry.\n\t   *\n\t   * @private\n\t   */\n\tMaterialSnackbar.prototype.checkQueue_ = function () {\n\t    if (this.queuedNotifications_.length > 0) {\n\t        this.showSnackbar(this.queuedNotifications_.shift());\n\t    }\n\t};\n\t/**\n\t   * Cleanup the snackbar event listeners and accessiblity attributes.\n\t   *\n\t   * @private\n\t   */\n\tMaterialSnackbar.prototype.cleanup_ = function () {\n\t    this.element_.classList.remove(this.cssClasses_.ACTIVE);\n\t    setTimeout(function () {\n\t        this.element_.setAttribute('aria-hidden', 'true');\n\t        this.textElement_.textContent = '';\n\t        if (!Boolean(this.actionElement_.getAttribute('aria-hidden'))) {\n\t            this.setActionHidden_(true);\n\t            this.actionElement_.textContent = '';\n\t            this.actionElement_.removeEventListener('click', this.actionHandler_);\n\t        }\n\t        this.actionHandler_ = undefined;\n\t        this.message_ = undefined;\n\t        this.actionText_ = undefined;\n\t        this.active = false;\n\t        this.checkQueue_();\n\t    }.bind(this), this.Constant_.ANIMATION_LENGTH);\n\t};\n\t/**\n\t   * Set the action handler hidden state.\n\t   *\n\t   * @param {boolean} value\n\t   * @private\n\t   */\n\tMaterialSnackbar.prototype.setActionHidden_ = function (value) {\n\t    if (value) {\n\t        this.actionElement_.setAttribute('aria-hidden', 'true');\n\t    } else {\n\t        this.actionElement_.removeAttribute('aria-hidden');\n\t    }\n\t};\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialSnackbar,\n\t    classAsString: 'MaterialSnackbar',\n\t    cssClass: 'mdl-js-snackbar',\n\t    widget: true\n\t});\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for Spinner MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   * @constructor\n\t   */\n\tvar MaterialSpinner = function MaterialSpinner(element) {\n\t    this.element_ = element;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialSpinner'] = MaterialSpinner;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialSpinner.prototype.Constant_ = { MDL_SPINNER_LAYER_COUNT: 4 };\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialSpinner.prototype.CssClasses_ = {\n\t    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n\t    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n\t    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n\t    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n\t    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n\t    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n\t};\n\t/**\n\t   * Auxiliary method to create a spinner layer.\n\t   *\n\t   * @param {number} index Index of the layer to be created.\n\t   * @public\n\t   */\n\tMaterialSpinner.prototype.createLayer = function (index) {\n\t    var layer = document.createElement('div');\n\t    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n\t    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n\t    var leftClipper = document.createElement('div');\n\t    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n\t    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n\t    var gapPatch = document.createElement('div');\n\t    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n\t    var rightClipper = document.createElement('div');\n\t    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n\t    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n\t    var circleOwners = [\n\t        leftClipper,\n\t        gapPatch,\n\t        rightClipper\n\t    ];\n\t    for (var i = 0; i < circleOwners.length; i++) {\n\t        var circle = document.createElement('div');\n\t        circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n\t        circleOwners[i].appendChild(circle);\n\t    }\n\t    layer.appendChild(leftClipper);\n\t    layer.appendChild(gapPatch);\n\t    layer.appendChild(rightClipper);\n\t    this.element_.appendChild(layer);\n\t};\n\tMaterialSpinner.prototype['createLayer'] = MaterialSpinner.prototype.createLayer;\n\t/**\n\t   * Stops the spinner animation.\n\t   * Public method for users who need to stop the spinner for any reason.\n\t   *\n\t   * @public\n\t   */\n\tMaterialSpinner.prototype.stop = function () {\n\t    this.element_.classList.remove('is-active');\n\t};\n\tMaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n\t/**\n\t   * Starts the spinner animation.\n\t   * Public method for users who need to manually start the spinner for any reason\n\t   * (instead of just adding the 'is-active' class to their markup).\n\t   *\n\t   * @public\n\t   */\n\tMaterialSpinner.prototype.start = function () {\n\t    this.element_.classList.add('is-active');\n\t};\n\tMaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialSpinner.prototype.init = function () {\n\t    if (this.element_) {\n\t        for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n\t            this.createLayer(i);\n\t        }\n\t        this.element_.classList.add('is-upgraded');\n\t    }\n\t};\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialSpinner,\n\t    classAsString: 'MaterialSpinner',\n\t    cssClass: 'mdl-js-spinner',\n\t    widget: true\n\t});\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for Checkbox MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   */\n\tvar MaterialSwitch = function MaterialSwitch(element) {\n\t    this.element_ = element;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialSwitch'] = MaterialSwitch;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialSwitch.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialSwitch.prototype.CssClasses_ = {\n\t    INPUT: 'mdl-switch__input',\n\t    TRACK: 'mdl-switch__track',\n\t    THUMB: 'mdl-switch__thumb',\n\t    FOCUS_HELPER: 'mdl-switch__focus-helper',\n\t    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n\t    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\t    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n\t    RIPPLE_CENTER: 'mdl-ripple--center',\n\t    RIPPLE: 'mdl-ripple',\n\t    IS_FOCUSED: 'is-focused',\n\t    IS_DISABLED: 'is-disabled',\n\t    IS_CHECKED: 'is-checked'\n\t};\n\t/**\n\t   * Handle change of state.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialSwitch.prototype.onChange_ = function (event) {\n\t    this.updateClasses_();\n\t};\n\t/**\n\t   * Handle focus of element.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialSwitch.prototype.onFocus_ = function (event) {\n\t    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n\t};\n\t/**\n\t   * Handle lost focus of element.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialSwitch.prototype.onBlur_ = function (event) {\n\t    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n\t};\n\t/**\n\t   * Handle mouseup.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialSwitch.prototype.onMouseUp_ = function (event) {\n\t    this.blur_();\n\t};\n\t/**\n\t   * Handle class updates.\n\t   *\n\t   * @private\n\t   */\n\tMaterialSwitch.prototype.updateClasses_ = function () {\n\t    this.checkDisabled();\n\t    this.checkToggleState();\n\t};\n\t/**\n\t   * Add blur.\n\t   *\n\t   * @private\n\t   */\n\tMaterialSwitch.prototype.blur_ = function () {\n\t    // TODO: figure out why there's a focus event being fired after our blur,\n\t    // so that we can avoid this hack.\n\t    window.setTimeout(function () {\n\t        this.inputElement_.blur();\n\t    }.bind(this), this.Constant_.TINY_TIMEOUT);\n\t};\n\t// Public methods.\n\t/**\n\t   * Check the components disabled state.\n\t   *\n\t   * @public\n\t   */\n\tMaterialSwitch.prototype.checkDisabled = function () {\n\t    if (this.inputElement_.disabled) {\n\t        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n\t    } else {\n\t        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n\t    }\n\t};\n\tMaterialSwitch.prototype['checkDisabled'] = MaterialSwitch.prototype.checkDisabled;\n\t/**\n\t   * Check the components toggled state.\n\t   *\n\t   * @public\n\t   */\n\tMaterialSwitch.prototype.checkToggleState = function () {\n\t    if (this.inputElement_.checked) {\n\t        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n\t    } else {\n\t        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n\t    }\n\t};\n\tMaterialSwitch.prototype['checkToggleState'] = MaterialSwitch.prototype.checkToggleState;\n\t/**\n\t   * Disable switch.\n\t   *\n\t   * @public\n\t   */\n\tMaterialSwitch.prototype.disable = function () {\n\t    this.inputElement_.disabled = true;\n\t    this.updateClasses_();\n\t};\n\tMaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;\n\t/**\n\t   * Enable switch.\n\t   *\n\t   * @public\n\t   */\n\tMaterialSwitch.prototype.enable = function () {\n\t    this.inputElement_.disabled = false;\n\t    this.updateClasses_();\n\t};\n\tMaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;\n\t/**\n\t   * Activate switch.\n\t   *\n\t   * @public\n\t   */\n\tMaterialSwitch.prototype.on = function () {\n\t    this.inputElement_.checked = true;\n\t    this.updateClasses_();\n\t};\n\tMaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;\n\t/**\n\t   * Deactivate switch.\n\t   *\n\t   * @public\n\t   */\n\tMaterialSwitch.prototype.off = function () {\n\t    this.inputElement_.checked = false;\n\t    this.updateClasses_();\n\t};\n\tMaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialSwitch.prototype.init = function () {\n\t    if (this.element_) {\n\t        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\t        var track = document.createElement('div');\n\t        track.classList.add(this.CssClasses_.TRACK);\n\t        var thumb = document.createElement('div');\n\t        thumb.classList.add(this.CssClasses_.THUMB);\n\t        var focusHelper = document.createElement('span');\n\t        focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n\t        thumb.appendChild(focusHelper);\n\t        this.element_.appendChild(track);\n\t        this.element_.appendChild(thumb);\n\t        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n\t        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n\t            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\t            this.rippleContainerElement_ = document.createElement('span');\n\t            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n\t            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n\t            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n\t            this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n\t            var ripple = document.createElement('span');\n\t            ripple.classList.add(this.CssClasses_.RIPPLE);\n\t            this.rippleContainerElement_.appendChild(ripple);\n\t            this.element_.appendChild(this.rippleContainerElement_);\n\t        }\n\t        this.boundChangeHandler = this.onChange_.bind(this);\n\t        this.boundFocusHandler = this.onFocus_.bind(this);\n\t        this.boundBlurHandler = this.onBlur_.bind(this);\n\t        this.inputElement_.addEventListener('change', this.boundChangeHandler);\n\t        this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n\t        this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n\t        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n\t        this.updateClasses_();\n\t        this.element_.classList.add('is-upgraded');\n\t    }\n\t};\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialSwitch,\n\t    classAsString: 'MaterialSwitch',\n\t    cssClass: 'mdl-js-switch',\n\t    widget: true\n\t});\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for Tabs MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {Element} element The element that will be upgraded.\n\t   */\n\tvar MaterialTabs = function MaterialTabs(element) {\n\t    // Stores the HTML element.\n\t    this.element_ = element;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialTabs'] = MaterialTabs;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialTabs.prototype.Constant_ = {};\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialTabs.prototype.CssClasses_ = {\n\t    TAB_CLASS: 'mdl-tabs__tab',\n\t    PANEL_CLASS: 'mdl-tabs__panel',\n\t    ACTIVE_CLASS: 'is-active',\n\t    UPGRADED_CLASS: 'is-upgraded',\n\t    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n\t    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n\t    MDL_RIPPLE: 'mdl-ripple',\n\t    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n\t};\n\t/**\n\t   * Handle clicks to a tabs component\n\t   *\n\t   * @private\n\t   */\n\tMaterialTabs.prototype.initTabs_ = function () {\n\t    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n\t        this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n\t    }\n\t    // Select element tabs, document panels\n\t    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n\t    this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n\t    // Create new tabs for each tab element\n\t    for (var i = 0; i < this.tabs_.length; i++) {\n\t        new MaterialTab(this.tabs_[i], this);\n\t    }\n\t    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n\t};\n\t/**\n\t   * Reset tab state, dropping active classes\n\t   *\n\t   * @private\n\t   */\n\tMaterialTabs.prototype.resetTabState_ = function () {\n\t    for (var k = 0; k < this.tabs_.length; k++) {\n\t        this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n\t    }\n\t};\n\t/**\n\t   * Reset panel state, droping active classes\n\t   *\n\t   * @private\n\t   */\n\tMaterialTabs.prototype.resetPanelState_ = function () {\n\t    for (var j = 0; j < this.panels_.length; j++) {\n\t        this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n\t    }\n\t};\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialTabs.prototype.init = function () {\n\t    if (this.element_) {\n\t        this.initTabs_();\n\t    }\n\t};\n\t/**\n\t   * Constructor for an individual tab.\n\t   *\n\t   * @constructor\n\t   * @param {Element} tab The HTML element for the tab.\n\t   * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\n\t   */\n\tfunction MaterialTab(tab, ctx) {\n\t    if (tab) {\n\t        if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n\t            var rippleContainer = document.createElement('span');\n\t            rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n\t            rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n\t            var ripple = document.createElement('span');\n\t            ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n\t            rippleContainer.appendChild(ripple);\n\t            tab.appendChild(rippleContainer);\n\t        }\n\t        tab.addEventListener('click', function (e) {\n\t            e.preventDefault();\n\t            var href = tab.href.split('#')[1];\n\t            var panel = ctx.element_.querySelector('#' + href);\n\t            ctx.resetTabState_();\n\t            ctx.resetPanelState_();\n\t            tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n\t            panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n\t        });\n\t    }\n\t}\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialTabs,\n\t    classAsString: 'MaterialTabs',\n\t    cssClass: 'mdl-js-tabs'\n\t});\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for Textfield MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   */\n\tvar MaterialTextfield = function MaterialTextfield(element) {\n\t    this.element_ = element;\n\t    this.maxRows = this.Constant_.NO_MAX_ROWS;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialTextfield'] = MaterialTextfield;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialTextfield.prototype.Constant_ = {\n\t    NO_MAX_ROWS: -1,\n\t    MAX_ROWS_ATTRIBUTE: 'maxrows'\n\t};\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialTextfield.prototype.CssClasses_ = {\n\t    LABEL: 'mdl-textfield__label',\n\t    INPUT: 'mdl-textfield__input',\n\t    IS_DIRTY: 'is-dirty',\n\t    IS_FOCUSED: 'is-focused',\n\t    IS_DISABLED: 'is-disabled',\n\t    IS_INVALID: 'is-invalid',\n\t    IS_UPGRADED: 'is-upgraded',\n\t    HAS_PLACEHOLDER: 'has-placeholder'\n\t};\n\t/**\n\t   * Handle input being entered.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialTextfield.prototype.onKeyDown_ = function (event) {\n\t    var currentRowCount = event.target.value.split('\\n').length;\n\t    if (event.keyCode === 13) {\n\t        if (currentRowCount >= this.maxRows) {\n\t            event.preventDefault();\n\t        }\n\t    }\n\t};\n\t/**\n\t   * Handle focus.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialTextfield.prototype.onFocus_ = function (event) {\n\t    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n\t};\n\t/**\n\t   * Handle lost focus.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialTextfield.prototype.onBlur_ = function (event) {\n\t    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n\t};\n\t/**\n\t   * Handle reset event from out side.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialTextfield.prototype.onReset_ = function (event) {\n\t    this.updateClasses_();\n\t};\n\t/**\n\t   * Handle class updates.\n\t   *\n\t   * @private\n\t   */\n\tMaterialTextfield.prototype.updateClasses_ = function () {\n\t    this.checkDisabled();\n\t    this.checkValidity();\n\t    this.checkDirty();\n\t    this.checkFocus();\n\t};\n\t// Public methods.\n\t/**\n\t   * Check the disabled state and update field accordingly.\n\t   *\n\t   * @public\n\t   */\n\tMaterialTextfield.prototype.checkDisabled = function () {\n\t    if (this.input_.disabled) {\n\t        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n\t    } else {\n\t        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n\t    }\n\t};\n\tMaterialTextfield.prototype['checkDisabled'] = MaterialTextfield.prototype.checkDisabled;\n\t/**\n\t  * Check the focus state and update field accordingly.\n\t  *\n\t  * @public\n\t  */\n\tMaterialTextfield.prototype.checkFocus = function () {\n\t    if (Boolean(this.element_.querySelector(':focus'))) {\n\t        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n\t    } else {\n\t        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n\t    }\n\t};\n\tMaterialTextfield.prototype['checkFocus'] = MaterialTextfield.prototype.checkFocus;\n\t/**\n\t   * Check the validity state and update field accordingly.\n\t   *\n\t   * @public\n\t   */\n\tMaterialTextfield.prototype.checkValidity = function () {\n\t    if (this.input_.validity) {\n\t        if (this.input_.validity.valid) {\n\t            this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n\t        } else {\n\t            this.element_.classList.add(this.CssClasses_.IS_INVALID);\n\t        }\n\t    }\n\t};\n\tMaterialTextfield.prototype['checkValidity'] = MaterialTextfield.prototype.checkValidity;\n\t/**\n\t   * Check the dirty state and update field accordingly.\n\t   *\n\t   * @public\n\t   */\n\tMaterialTextfield.prototype.checkDirty = function () {\n\t    if (this.input_.value && this.input_.value.length > 0) {\n\t        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n\t    } else {\n\t        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n\t    }\n\t};\n\tMaterialTextfield.prototype['checkDirty'] = MaterialTextfield.prototype.checkDirty;\n\t/**\n\t   * Disable text field.\n\t   *\n\t   * @public\n\t   */\n\tMaterialTextfield.prototype.disable = function () {\n\t    this.input_.disabled = true;\n\t    this.updateClasses_();\n\t};\n\tMaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n\t/**\n\t   * Enable text field.\n\t   *\n\t   * @public\n\t   */\n\tMaterialTextfield.prototype.enable = function () {\n\t    this.input_.disabled = false;\n\t    this.updateClasses_();\n\t};\n\tMaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n\t/**\n\t   * Update text field value.\n\t   *\n\t   * @param {string} value The value to which to set the control (optional).\n\t   * @public\n\t   */\n\tMaterialTextfield.prototype.change = function (value) {\n\t    this.input_.value = value || '';\n\t    this.updateClasses_();\n\t};\n\tMaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialTextfield.prototype.init = function () {\n\t    if (this.element_) {\n\t        this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n\t        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\t        if (this.input_) {\n\t            if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n\t                this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n\t                if (isNaN(this.maxRows)) {\n\t                    this.maxRows = this.Constant_.NO_MAX_ROWS;\n\t                }\n\t            }\n\t            if (this.input_.hasAttribute('placeholder')) {\n\t                this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n\t            }\n\t            this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n\t            this.boundFocusHandler = this.onFocus_.bind(this);\n\t            this.boundBlurHandler = this.onBlur_.bind(this);\n\t            this.boundResetHandler = this.onReset_.bind(this);\n\t            this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n\t            this.input_.addEventListener('focus', this.boundFocusHandler);\n\t            this.input_.addEventListener('blur', this.boundBlurHandler);\n\t            this.input_.addEventListener('reset', this.boundResetHandler);\n\t            if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n\t                // TODO: This should handle pasting multi line text.\n\t                // Currently doesn't.\n\t                this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n\t                this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n\t            }\n\t            var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n\t            this.updateClasses_();\n\t            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n\t            if (invalid) {\n\t                this.element_.classList.add(this.CssClasses_.IS_INVALID);\n\t            }\n\t            if (this.input_.hasAttribute('autofocus')) {\n\t                this.element_.focus();\n\t                this.checkFocus();\n\t            }\n\t        }\n\t    }\n\t};\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialTextfield,\n\t    classAsString: 'MaterialTextfield',\n\t    cssClass: 'mdl-js-textfield',\n\t    widget: true\n\t});\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for Tooltip MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   */\n\tvar MaterialTooltip = function MaterialTooltip(element) {\n\t    this.element_ = element;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialTooltip'] = MaterialTooltip;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialTooltip.prototype.Constant_ = {};\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialTooltip.prototype.CssClasses_ = {\n\t    IS_ACTIVE: 'is-active',\n\t    BOTTOM: 'mdl-tooltip--bottom',\n\t    LEFT: 'mdl-tooltip--left',\n\t    RIGHT: 'mdl-tooltip--right',\n\t    TOP: 'mdl-tooltip--top'\n\t};\n\t/**\n\t   * Handle mouseenter for tooltip.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n\t    var props = event.target.getBoundingClientRect();\n\t    var left = props.left + props.width / 2;\n\t    var top = props.top + props.height / 2;\n\t    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n\t    var marginTop = -1 * (this.element_.offsetHeight / 2);\n\t    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n\t        left = props.width / 2;\n\t        if (top + marginTop < 0) {\n\t            this.element_.style.top = 0;\n\t            this.element_.style.marginTop = 0;\n\t        } else {\n\t            this.element_.style.top = top + 'px';\n\t            this.element_.style.marginTop = marginTop + 'px';\n\t        }\n\t    } else {\n\t        if (left + marginLeft < 0) {\n\t            this.element_.style.left = 0;\n\t            this.element_.style.marginLeft = 0;\n\t        } else {\n\t            this.element_.style.left = left + 'px';\n\t            this.element_.style.marginLeft = marginLeft + 'px';\n\t        }\n\t    }\n\t    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n\t        this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n\t    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n\t        this.element_.style.left = props.left + props.width + 10 + 'px';\n\t    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n\t        this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n\t    } else {\n\t        this.element_.style.top = props.top + props.height + 10 + 'px';\n\t    }\n\t    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n\t};\n\t/**\n\t   * Handle mouseleave for tooltip.\n\t   *\n\t   * @private\n\t   */\n\tMaterialTooltip.prototype.handleMouseLeave_ = function () {\n\t    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n\t};\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialTooltip.prototype.init = function () {\n\t    if (this.element_) {\n\t        var forElId = this.element_.getAttribute('for');\n\t        if (forElId) {\n\t            this.forElement_ = document.getElementById(forElId);\n\t        }\n\t        if (this.forElement_) {\n\t            // It's left here because it prevents accidental text selection on Android\n\t            if (!this.forElement_.hasAttribute('tabindex')) {\n\t                this.forElement_.setAttribute('tabindex', '0');\n\t            }\n\t            this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n\t            this.boundMouseLeaveHandler = this.handleMouseLeave_.bind(this);\n\t            this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n\t            this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n\t            this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveHandler, false);\n\t            window.addEventListener('touchstart', this.boundMouseLeaveHandler);\n\t        }\n\t    }\n\t};\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialTooltip,\n\t    classAsString: 'MaterialTooltip',\n\t    cssClass: 'mdl-tooltip'\n\t});\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for Layout MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   */\n\tvar MaterialLayout = function MaterialLayout(element) {\n\t    this.element_ = element;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialLayout'] = MaterialLayout;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialLayout.prototype.Constant_ = {\n\t    MAX_WIDTH: '(max-width: 1024px)',\n\t    TAB_SCROLL_PIXELS: 100,\n\t    RESIZE_TIMEOUT: 100,\n\t    MENU_ICON: '&#xE5D2;',\n\t    CHEVRON_LEFT: 'chevron_left',\n\t    CHEVRON_RIGHT: 'chevron_right'\n\t};\n\t/**\n\t   * Keycodes, for code readability.\n\t   *\n\t   * @enum {number}\n\t   * @private\n\t   */\n\tMaterialLayout.prototype.Keycodes_ = {\n\t    ENTER: 13,\n\t    ESCAPE: 27,\n\t    SPACE: 32\n\t};\n\t/**\n\t   * Modes.\n\t   *\n\t   * @enum {number}\n\t   * @private\n\t   */\n\tMaterialLayout.prototype.Mode_ = {\n\t    STANDARD: 0,\n\t    SEAMED: 1,\n\t    WATERFALL: 2,\n\t    SCROLL: 3\n\t};\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialLayout.prototype.CssClasses_ = {\n\t    CONTAINER: 'mdl-layout__container',\n\t    HEADER: 'mdl-layout__header',\n\t    DRAWER: 'mdl-layout__drawer',\n\t    CONTENT: 'mdl-layout__content',\n\t    DRAWER_BTN: 'mdl-layout__drawer-button',\n\t    ICON: 'material-icons',\n\t    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n\t    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n\t    RIPPLE: 'mdl-ripple',\n\t    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\t    HEADER_SEAMED: 'mdl-layout__header--seamed',\n\t    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n\t    HEADER_SCROLL: 'mdl-layout__header--scroll',\n\t    FIXED_HEADER: 'mdl-layout--fixed-header',\n\t    OBFUSCATOR: 'mdl-layout__obfuscator',\n\t    TAB_BAR: 'mdl-layout__tab-bar',\n\t    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n\t    TAB: 'mdl-layout__tab',\n\t    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n\t    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n\t    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n\t    PANEL: 'mdl-layout__tab-panel',\n\t    HAS_DRAWER: 'has-drawer',\n\t    HAS_TABS: 'has-tabs',\n\t    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n\t    CASTING_SHADOW: 'is-casting-shadow',\n\t    IS_COMPACT: 'is-compact',\n\t    IS_SMALL_SCREEN: 'is-small-screen',\n\t    IS_DRAWER_OPEN: 'is-visible',\n\t    IS_ACTIVE: 'is-active',\n\t    IS_UPGRADED: 'is-upgraded',\n\t    IS_ANIMATING: 'is-animating',\n\t    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n\t    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n\t};\n\t/**\n\t   * Handles scrolling on the content.\n\t   *\n\t   * @private\n\t   */\n\tMaterialLayout.prototype.contentScrollHandler_ = function () {\n\t    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n\t        return;\n\t    }\n\t    var headerVisible = !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) || this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\n\t    if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n\t        this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n\t        this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n\t        if (headerVisible) {\n\t            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n\t        }\n\t    } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n\t        this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n\t        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n\t        if (headerVisible) {\n\t            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n\t        }\n\t    }\n\t};\n\t/**\n\t   * Handles a keyboard event on the drawer.\n\t   *\n\t   * @param {Event} evt The event that fired.\n\t   * @private\n\t   */\n\tMaterialLayout.prototype.keyboardEventHandler_ = function (evt) {\n\t    // Only react when the drawer is open.\n\t    if (evt.keyCode === this.Keycodes_.ESCAPE && this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n\t        this.toggleDrawer();\n\t    }\n\t};\n\t/**\n\t   * Handles changes in screen size.\n\t   *\n\t   * @private\n\t   */\n\tMaterialLayout.prototype.screenSizeHandler_ = function () {\n\t    if (this.screenSizeMediaQuery_.matches) {\n\t        this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n\t    } else {\n\t        this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n\t        // Collapse drawer (if any) when moving to a large screen size.\n\t        if (this.drawer_) {\n\t            this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n\t            this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n\t        }\n\t    }\n\t};\n\t/**\n\t   * Handles events of drawer button.\n\t   *\n\t   * @param {Event} evt The event that fired.\n\t   * @private\n\t   */\n\tMaterialLayout.prototype.drawerToggleHandler_ = function (evt) {\n\t    if (evt && evt.type === 'keydown') {\n\t        if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n\t            // prevent scrolling in drawer nav\n\t            evt.preventDefault();\n\t        } else {\n\t            // prevent other keys\n\t            return;\n\t        }\n\t    }\n\t    this.toggleDrawer();\n\t};\n\t/**\n\t   * Handles (un)setting the `is-animating` class\n\t   *\n\t   * @private\n\t   */\n\tMaterialLayout.prototype.headerTransitionEndHandler_ = function () {\n\t    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n\t};\n\t/**\n\t   * Handles expanding the header on click\n\t   *\n\t   * @private\n\t   */\n\tMaterialLayout.prototype.headerClickHandler_ = function () {\n\t    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n\t        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n\t        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n\t    }\n\t};\n\t/**\n\t   * Reset tab state, dropping active classes\n\t   *\n\t   * @private\n\t   */\n\tMaterialLayout.prototype.resetTabState_ = function (tabBar) {\n\t    for (var k = 0; k < tabBar.length; k++) {\n\t        tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n\t    }\n\t};\n\t/**\n\t   * Reset panel state, droping active classes\n\t   *\n\t   * @private\n\t   */\n\tMaterialLayout.prototype.resetPanelState_ = function (panels) {\n\t    for (var j = 0; j < panels.length; j++) {\n\t        panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n\t    }\n\t};\n\t/**\n\t  * Toggle drawer state\n\t  *\n\t  * @public\n\t  */\n\tMaterialLayout.prototype.toggleDrawer = function () {\n\t    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n\t    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n\t    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n\t    // Set accessibility properties.\n\t    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n\t        this.drawer_.setAttribute('aria-hidden', 'false');\n\t        drawerButton.setAttribute('aria-expanded', 'true');\n\t    } else {\n\t        this.drawer_.setAttribute('aria-hidden', 'true');\n\t        drawerButton.setAttribute('aria-expanded', 'false');\n\t    }\n\t};\n\tMaterialLayout.prototype['toggleDrawer'] = MaterialLayout.prototype.toggleDrawer;\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialLayout.prototype.init = function () {\n\t    if (this.element_) {\n\t        var container = document.createElement('div');\n\t        container.classList.add(this.CssClasses_.CONTAINER);\n\t        var focusedElement = this.element_.querySelector(':focus');\n\t        this.element_.parentElement.insertBefore(container, this.element_);\n\t        this.element_.parentElement.removeChild(this.element_);\n\t        container.appendChild(this.element_);\n\t        if (focusedElement) {\n\t            focusedElement.focus();\n\t        }\n\t        var directChildren = this.element_.childNodes;\n\t        var numChildren = directChildren.length;\n\t        for (var c = 0; c < numChildren; c++) {\n\t            var child = directChildren[c];\n\t            if (child.classList && child.classList.contains(this.CssClasses_.HEADER)) {\n\t                this.header_ = child;\n\t            }\n\t            if (child.classList && child.classList.contains(this.CssClasses_.DRAWER)) {\n\t                this.drawer_ = child;\n\t            }\n\t            if (child.classList && child.classList.contains(this.CssClasses_.CONTENT)) {\n\t                this.content_ = child;\n\t            }\n\t        }\n\t        window.addEventListener('pageshow', function (e) {\n\t            if (e.persisted) {\n\t                // when page is loaded from back/forward cache\n\t                // trigger repaint to let layout scroll in safari\n\t                this.element_.style.overflowY = 'hidden';\n\t                requestAnimationFrame(function () {\n\t                    this.element_.style.overflowY = '';\n\t                }.bind(this));\n\t            }\n\t        }.bind(this), false);\n\t        if (this.header_) {\n\t            this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n\t        }\n\t        var mode = this.Mode_.STANDARD;\n\t        if (this.header_) {\n\t            if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n\t                mode = this.Mode_.SEAMED;\n\t            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)) {\n\t                mode = this.Mode_.WATERFALL;\n\t                this.header_.addEventListener('transitionend', this.headerTransitionEndHandler_.bind(this));\n\t                this.header_.addEventListener('click', this.headerClickHandler_.bind(this));\n\t            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)) {\n\t                mode = this.Mode_.SCROLL;\n\t                container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n\t            }\n\t            if (mode === this.Mode_.STANDARD) {\n\t                this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n\t                if (this.tabBar_) {\n\t                    this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n\t                }\n\t            } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n\t                this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n\t                if (this.tabBar_) {\n\t                    this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n\t                }\n\t            } else if (mode === this.Mode_.WATERFALL) {\n\t                // Add and remove shadows depending on scroll position.\n\t                // Also add/remove auxiliary class for styling of the compact version of\n\t                // the header.\n\t                this.content_.addEventListener('scroll', this.contentScrollHandler_.bind(this));\n\t                this.contentScrollHandler_();\n\t            }\n\t        }\n\t        // Add drawer toggling button to our layout, if we have an openable drawer.\n\t        if (this.drawer_) {\n\t            var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n\t            if (!drawerButton) {\n\t                drawerButton = document.createElement('div');\n\t                drawerButton.setAttribute('aria-expanded', 'false');\n\t                drawerButton.setAttribute('role', 'button');\n\t                drawerButton.setAttribute('tabindex', '0');\n\t                drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n\t                var drawerButtonIcon = document.createElement('i');\n\t                drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n\t                drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\n\t                drawerButton.appendChild(drawerButtonIcon);\n\t            }\n\t            if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n\t                //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n\t                drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n\t            } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n\t                //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n\t                drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n\t            }\n\t            drawerButton.addEventListener('click', this.drawerToggleHandler_.bind(this));\n\t            drawerButton.addEventListener('keydown', this.drawerToggleHandler_.bind(this));\n\t            // Add a class if the layout has a drawer, for altering the left padding.\n\t            // Adds the HAS_DRAWER to the elements since this.header_ may or may\n\t            // not be present.\n\t            this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n\t            // If we have a fixed header, add the button to the header rather than\n\t            // the layout.\n\t            if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n\t                this.header_.insertBefore(drawerButton, this.header_.firstChild);\n\t            } else {\n\t                this.element_.insertBefore(drawerButton, this.content_);\n\t            }\n\t            var obfuscator = document.createElement('div');\n\t            obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n\t            this.element_.appendChild(obfuscator);\n\t            obfuscator.addEventListener('click', this.drawerToggleHandler_.bind(this));\n\t            this.obfuscator_ = obfuscator;\n\t            this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\n\t            this.drawer_.setAttribute('aria-hidden', 'true');\n\t        }\n\t        // Keep an eye on screen size, and add/remove auxiliary class for styling\n\t        // of small screens.\n\t        this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n\t        this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n\t        this.screenSizeHandler_();\n\t        // Initialize tabs, if any.\n\t        if (this.header_ && this.tabBar_) {\n\t            this.element_.classList.add(this.CssClasses_.HAS_TABS);\n\t            var tabContainer = document.createElement('div');\n\t            tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n\t            this.header_.insertBefore(tabContainer, this.tabBar_);\n\t            this.header_.removeChild(this.tabBar_);\n\t            var leftButton = document.createElement('div');\n\t            leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n\t            leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n\t            var leftButtonIcon = document.createElement('i');\n\t            leftButtonIcon.classList.add(this.CssClasses_.ICON);\n\t            leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n\t            leftButton.appendChild(leftButtonIcon);\n\t            leftButton.addEventListener('click', function () {\n\t                this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n\t            }.bind(this));\n\t            var rightButton = document.createElement('div');\n\t            rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n\t            rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n\t            var rightButtonIcon = document.createElement('i');\n\t            rightButtonIcon.classList.add(this.CssClasses_.ICON);\n\t            rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n\t            rightButton.appendChild(rightButtonIcon);\n\t            rightButton.addEventListener('click', function () {\n\t                this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n\t            }.bind(this));\n\t            tabContainer.appendChild(leftButton);\n\t            tabContainer.appendChild(this.tabBar_);\n\t            tabContainer.appendChild(rightButton);\n\t            // Add and remove tab buttons depending on scroll position and total\n\t            // window size.\n\t            var tabUpdateHandler = function () {\n\t                if (this.tabBar_.scrollLeft > 0) {\n\t                    leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n\t                } else {\n\t                    leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n\t                }\n\t                if (this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n\t                    rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n\t                } else {\n\t                    rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n\t                }\n\t            }.bind(this);\n\t            this.tabBar_.addEventListener('scroll', tabUpdateHandler);\n\t            tabUpdateHandler();\n\t            // Update tabs when the window resizes.\n\t            var windowResizeHandler = function () {\n\t                // Use timeouts to make sure it doesn't happen too often.\n\t                if (this.resizeTimeoutId_) {\n\t                    clearTimeout(this.resizeTimeoutId_);\n\t                }\n\t                this.resizeTimeoutId_ = setTimeout(function () {\n\t                    tabUpdateHandler();\n\t                    this.resizeTimeoutId_ = null;\n\t                }.bind(this), this.Constant_.RESIZE_TIMEOUT);\n\t            }.bind(this);\n\t            window.addEventListener('resize', windowResizeHandler);\n\t            if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n\t                this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n\t            }\n\t            // Select element tabs, document panels\n\t            var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n\t            var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n\t            // Create new tabs for each tab element\n\t            for (var i = 0; i < tabs.length; i++) {\n\t                new MaterialLayoutTab(tabs[i], tabs, panels, this);\n\t            }\n\t        }\n\t        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n\t    }\n\t};\n\t/**\n\t   * Constructor for an individual tab.\n\t   *\n\t   * @constructor\n\t   * @param {HTMLElement} tab The HTML element for the tab.\n\t   * @param {!Array<HTMLElement>} tabs Array with HTML elements for all tabs.\n\t   * @param {!Array<HTMLElement>} panels Array with HTML elements for all panels.\n\t   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\n\t   */\n\tfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n\t    /**\n\t     * Auxiliary method to programmatically select a tab in the UI.\n\t     */\n\t    function selectTab() {\n\t        var href = tab.href.split('#')[1];\n\t        var panel = layout.content_.querySelector('#' + href);\n\t        layout.resetTabState_(tabs);\n\t        layout.resetPanelState_(panels);\n\t        tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n\t        panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n\t    }\n\t    if (layout.tabBar_.classList.contains(layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n\t        var rippleContainer = document.createElement('span');\n\t        rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n\t        rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n\t        var ripple = document.createElement('span');\n\t        ripple.classList.add(layout.CssClasses_.RIPPLE);\n\t        rippleContainer.appendChild(ripple);\n\t        tab.appendChild(rippleContainer);\n\t    }\n\t    tab.addEventListener('click', function (e) {\n\t        if (tab.getAttribute('href').charAt(0) === '#') {\n\t            e.preventDefault();\n\t            selectTab();\n\t        }\n\t    });\n\t    tab.show = selectTab;\n\t}\n\twindow['MaterialLayoutTab'] = MaterialLayoutTab;\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialLayout,\n\t    classAsString: 'MaterialLayout',\n\t    cssClass: 'mdl-js-layout'\n\t});\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for Data Table Card MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {Element} element The element that will be upgraded.\n\t   */\n\tvar MaterialDataTable = function MaterialDataTable(element) {\n\t    this.element_ = element;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialDataTable'] = MaterialDataTable;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialDataTable.prototype.Constant_ = {};\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialDataTable.prototype.CssClasses_ = {\n\t    DATA_TABLE: 'mdl-data-table',\n\t    SELECTABLE: 'mdl-data-table--selectable',\n\t    SELECT_ELEMENT: 'mdl-data-table__select',\n\t    IS_SELECTED: 'is-selected',\n\t    IS_UPGRADED: 'is-upgraded'\n\t};\n\t/**\n\t   * Generates and returns a function that toggles the selection state of a\n\t   * single row (or multiple rows).\n\t   *\n\t   * @param {Element} checkbox Checkbox that toggles the selection state.\n\t   * @param {Element} row Row to toggle when checkbox changes.\n\t   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n\t   * @private\n\t   */\n\tMaterialDataTable.prototype.selectRow_ = function (checkbox, row, opt_rows) {\n\t    if (row) {\n\t        return function () {\n\t            if (checkbox.checked) {\n\t                row.classList.add(this.CssClasses_.IS_SELECTED);\n\t            } else {\n\t                row.classList.remove(this.CssClasses_.IS_SELECTED);\n\t            }\n\t        }.bind(this);\n\t    }\n\t    if (opt_rows) {\n\t        return function () {\n\t            var i;\n\t            var el;\n\t            if (checkbox.checked) {\n\t                for (i = 0; i < opt_rows.length; i++) {\n\t                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n\t                    el['MaterialCheckbox'].check();\n\t                    opt_rows[i].classList.add(this.CssClasses_.IS_SELECTED);\n\t                }\n\t            } else {\n\t                for (i = 0; i < opt_rows.length; i++) {\n\t                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n\t                    el['MaterialCheckbox'].uncheck();\n\t                    opt_rows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n\t                }\n\t            }\n\t        }.bind(this);\n\t    }\n\t};\n\t/**\n\t   * Creates a checkbox for a single or or multiple rows and hooks up the\n\t   * event handling.\n\t   *\n\t   * @param {Element} row Row to toggle when checkbox changes.\n\t   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n\t   * @private\n\t   */\n\tMaterialDataTable.prototype.createCheckbox_ = function (row, opt_rows) {\n\t    var label = document.createElement('label');\n\t    var labelClasses = [\n\t        'mdl-checkbox',\n\t        'mdl-js-checkbox',\n\t        'mdl-js-ripple-effect',\n\t        this.CssClasses_.SELECT_ELEMENT\n\t    ];\n\t    label.className = labelClasses.join(' ');\n\t    var checkbox = document.createElement('input');\n\t    checkbox.type = 'checkbox';\n\t    checkbox.classList.add('mdl-checkbox__input');\n\t    if (row) {\n\t        checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);\n\t        checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n\t    } else if (opt_rows) {\n\t        checkbox.addEventListener('change', this.selectRow_(checkbox, null, opt_rows));\n\t    }\n\t    label.appendChild(checkbox);\n\t    componentHandler.upgradeElement(label, 'MaterialCheckbox');\n\t    return label;\n\t};\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialDataTable.prototype.init = function () {\n\t    if (this.element_) {\n\t        var firstHeader = this.element_.querySelector('th');\n\t        var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));\n\t        var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));\n\t        var rows = bodyRows.concat(footRows);\n\t        if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n\t            var th = document.createElement('th');\n\t            var headerCheckbox = this.createCheckbox_(null, rows);\n\t            th.appendChild(headerCheckbox);\n\t            firstHeader.parentElement.insertBefore(th, firstHeader);\n\t            for (var i = 0; i < rows.length; i++) {\n\t                var firstCell = rows[i].querySelector('td');\n\t                if (firstCell) {\n\t                    var td = document.createElement('td');\n\t                    if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {\n\t                        var rowCheckbox = this.createCheckbox_(rows[i]);\n\t                        td.appendChild(rowCheckbox);\n\t                    }\n\t                    rows[i].insertBefore(td, firstCell);\n\t                }\n\t            }\n\t            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n\t        }\n\t    }\n\t};\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialDataTable,\n\t    classAsString: 'MaterialDataTable',\n\t    cssClass: 'mdl-js-data-table'\n\t});\n\t/**\n\t * @license\n\t * Copyright 2015 Google Inc. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *      http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t/**\n\t   * Class constructor for Ripple MDL component.\n\t   * Implements MDL component design pattern defined at:\n\t   * https://github.com/jasonmayes/mdl-component-design-pattern\n\t   *\n\t   * @constructor\n\t   * @param {HTMLElement} element The element that will be upgraded.\n\t   */\n\tvar MaterialRipple = function MaterialRipple(element) {\n\t    this.element_ = element;\n\t    // Initialize instance.\n\t    this.init();\n\t};\n\twindow['MaterialRipple'] = MaterialRipple;\n\t/**\n\t   * Store constants in one place so they can be updated easily.\n\t   *\n\t   * @enum {string | number}\n\t   * @private\n\t   */\n\tMaterialRipple.prototype.Constant_ = {\n\t    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n\t    INITIAL_SIZE: '1px',\n\t    INITIAL_OPACITY: '0.4',\n\t    FINAL_OPACITY: '0',\n\t    FINAL_SCALE: ''\n\t};\n\t/**\n\t   * Store strings for class names defined by this component that are used in\n\t   * JavaScript. This allows us to simply change it in one place should we\n\t   * decide to modify at a later date.\n\t   *\n\t   * @enum {string}\n\t   * @private\n\t   */\n\tMaterialRipple.prototype.CssClasses_ = {\n\t    RIPPLE_CENTER: 'mdl-ripple--center',\n\t    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\t    RIPPLE: 'mdl-ripple',\n\t    IS_ANIMATING: 'is-animating',\n\t    IS_VISIBLE: 'is-visible'\n\t};\n\t/**\n\t   * Handle mouse / finger down on element.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialRipple.prototype.downHandler_ = function (event) {\n\t    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n\t        var rect = this.element_.getBoundingClientRect();\n\t        this.boundHeight = rect.height;\n\t        this.boundWidth = rect.width;\n\t        this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;\n\t        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n\t        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n\t    }\n\t    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n\t    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n\t        this.ignoringMouseDown_ = false;\n\t    } else {\n\t        if (event.type === 'touchstart') {\n\t            this.ignoringMouseDown_ = true;\n\t        }\n\t        var frameCount = this.getFrameCount();\n\t        if (frameCount > 0) {\n\t            return;\n\t        }\n\t        this.setFrameCount(1);\n\t        var bound = event.currentTarget.getBoundingClientRect();\n\t        var x;\n\t        var y;\n\t        // Check if we are handling a keyboard click.\n\t        if (event.clientX === 0 && event.clientY === 0) {\n\t            x = Math.round(bound.width / 2);\n\t            y = Math.round(bound.height / 2);\n\t        } else {\n\t            var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n\t            var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n\t            x = Math.round(clientX - bound.left);\n\t            y = Math.round(clientY - bound.top);\n\t        }\n\t        this.setRippleXY(x, y);\n\t        this.setRippleStyles(true);\n\t        window.requestAnimationFrame(this.animFrameHandler.bind(this));\n\t    }\n\t};\n\t/**\n\t   * Handle mouse / finger up on element.\n\t   *\n\t   * @param {Event} event The event that fired.\n\t   * @private\n\t   */\n\tMaterialRipple.prototype.upHandler_ = function (event) {\n\t    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n\t    if (event && event.detail !== 2) {\n\t        // Allow a repaint to occur before removing this class, so the animation\n\t        // shows for tap events, which seem to trigger a mouseup too soon after\n\t        // mousedown.\n\t        window.setTimeout(function () {\n\t            this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n\t        }.bind(this), 0);\n\t    }\n\t};\n\t/**\n\t   * Initialize element.\n\t   */\n\tMaterialRipple.prototype.init = function () {\n\t    if (this.element_) {\n\t        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n\t        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n\t            this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);\n\t            this.frameCount_ = 0;\n\t            this.rippleSize_ = 0;\n\t            this.x_ = 0;\n\t            this.y_ = 0;\n\t            // Touch start produces a compat mouse down event, which would cause a\n\t            // second ripples. To avoid that, we use this property to ignore the first\n\t            // mouse down after a touch start.\n\t            this.ignoringMouseDown_ = false;\n\t            this.boundDownHandler = this.downHandler_.bind(this);\n\t            this.element_.addEventListener('mousedown', this.boundDownHandler);\n\t            this.element_.addEventListener('touchstart', this.boundDownHandler);\n\t            this.boundUpHandler = this.upHandler_.bind(this);\n\t            this.element_.addEventListener('mouseup', this.boundUpHandler);\n\t            this.element_.addEventListener('mouseleave', this.boundUpHandler);\n\t            this.element_.addEventListener('touchend', this.boundUpHandler);\n\t            this.element_.addEventListener('blur', this.boundUpHandler);\n\t            /**\n\t         * Getter for frameCount_.\n\t         * @return {number} the frame count.\n\t         */\n\t            this.getFrameCount = function () {\n\t                return this.frameCount_;\n\t            };\n\t            /**\n\t         * Setter for frameCount_.\n\t         * @param {number} fC the frame count.\n\t         */\n\t            this.setFrameCount = function (fC) {\n\t                this.frameCount_ = fC;\n\t            };\n\t            /**\n\t         * Getter for rippleElement_.\n\t         * @return {Element} the ripple element.\n\t         */\n\t            this.getRippleElement = function () {\n\t                return this.rippleElement_;\n\t            };\n\t            /**\n\t         * Sets the ripple X and Y coordinates.\n\t         * @param  {number} newX the new X coordinate\n\t         * @param  {number} newY the new Y coordinate\n\t         */\n\t            this.setRippleXY = function (newX, newY) {\n\t                this.x_ = newX;\n\t                this.y_ = newY;\n\t            };\n\t            /**\n\t         * Sets the ripple styles.\n\t         * @param  {boolean} start whether or not this is the start frame.\n\t         */\n\t            this.setRippleStyles = function (start) {\n\t                if (this.rippleElement_ !== null) {\n\t                    var transformString;\n\t                    var scale;\n\t                    var size;\n\t                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n\t                    if (start) {\n\t                        scale = this.Constant_.INITIAL_SCALE;\n\t                        size = this.Constant_.INITIAL_SIZE;\n\t                    } else {\n\t                        scale = this.Constant_.FINAL_SCALE;\n\t                        size = this.rippleSize_ + 'px';\n\t                        if (recentering) {\n\t                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';\n\t                        }\n\t                    }\n\t                    transformString = 'translate(-50%, -50%) ' + offset + scale;\n\t                    this.rippleElement_.style.webkitTransform = transformString;\n\t                    this.rippleElement_.style.msTransform = transformString;\n\t                    this.rippleElement_.style.transform = transformString;\n\t                    if (start) {\n\t                        this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n\t                    } else {\n\t                        this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n\t                    }\n\t                }\n\t            };\n\t            /**\n\t         * Handles an animation frame.\n\t         */\n\t            this.animFrameHandler = function () {\n\t                if (this.frameCount_-- > 0) {\n\t                    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n\t                } else {\n\t                    this.setRippleStyles(false);\n\t                }\n\t            };\n\t        }\n\t    }\n\t};\n\t// The component registers itself. It can assume componentHandler is available\n\t// in the global scope.\n\tcomponentHandler.register({\n\t    constructor: MaterialRipple,\n\t    classAsString: 'MaterialRipple',\n\t    cssClass: 'mdl-js-ripple-effect',\n\t    widget: false\n\t});\n\t}());\n\t\n\t\n\t/*** EXPORTS FROM exports-loader ***/\n\tmodule.exports = componentHandler;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=carousel _v-6b753e81=\\\"\\\"> <ol class=carousel-indicators _v-6b753e81=\\\"\\\"> <li v-for=\\\"image in images\\\" :class=\\\"{active: $index===currentSlideIndex }\\\" @click=setCurrentSlide($index) _v-6b753e81=\\\"\\\"> </li> </ol> <div class=carousel-inner _v-6b753e81=\\\"\\\"> <div class=carousel-wraper :style=carouselWraperStyle _v-6b753e81=\\\"\\\"> <div v-for=\\\"image in images\\\" class=image :class=\\\"{active:$index === currentSlideIndex}\\\" :style=\\\"{\\n          backgroundImage: `radial-gradient(60% 60%, rgba(0, 0, 0, 0.6) 0%, \\n        rgba(0, 0, 0, 0) 95%), url(${image.img})`,\\n          width: `${100 /imagesCount}%`,\\n        }\\\" _v-6b753e81=\\\"\\\"> <p _v-6b753e81=\\\"\\\">{{image.msg}}</p> </div> </div> </div> <a class=\\\"left carousel-control\\\" _v-6b753e81=\\\"\\\"></a> <a class=\\\"right carousel-control\\\" _v-6b753e81=\\\"\\\"></a> </div>\";\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=app> <carousel v-ref:carousel></carousel> </div>\";\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(5)\n\t__vue_script__ = __webpack_require__(1)\n\t__vue_template__ = __webpack_require__(8)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(6)\n\t__vue_script__ = __webpack_require__(2)\n\t__vue_template__ = __webpack_require__(7)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.26\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n\tvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\t\n\t// detecting iOS UIWebView by indexedDB\n\tvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tiosVersionMatch: iosVersionMatch,\n\t\tiosVersion: iosVersion,\n\t\thasMutationObserverBug: hasMutationObserverBug,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (false) {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.26';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** js/app.74e716a4197caf5dda6e.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 40d8661a55e05d5b8673\n **/","import Vue from 'vue';\nimport App from './components/App/App.vue';\n\n\n/* eslint-disable no-new */\n\nnew Vue({\n    el: 'body',\n    components: { App },\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","import mdl from 'material-design-lite/material.js';\nimport 'material-design-lite/src/material-design-lite.scss';\n\n// components\nimport Carousel from '../Carousel/Carousel.vue';\n\n\nexport default {\n    ready() {\n        mdl.upgradeDom();\n        const images = [\n            {\n                img: 'http://acmedia365.com/wp-content/uploads/2016/02/201009101513590430.jpg',\n                msg: 'Craving for more than campus food? Fortunately, you have FooPar Beta!',\n            },\n            {\n                img: 'https://wallpaperscraft.com/image/salad_vegetables_greens_healthy_food_20779_1024x768.jpg',\n                msg: 'Try our catering service for a variety of snacks and refreshments for functions',\n            },\n            {\n                img: 'http://myhealthydish.com/wp-content/uploads/2015/07/healthy-foods-1024x768.jpg',\n                msg: 'Simply choose from our lunch selection to avoid queues in the canteens',\n            },\n            {\n                img: 'http://www.wallcoo.net/photography/sz189-at-the-Table/wallpapers/1024x768/foods-on-table-HV038_350A_wallcoo.com.jpg',\n                msg: \"Anytime you feel like eating off-campus foods, don't hesitate to tell us.\",\n            },\n        ];\n        this.$refs.carousel.setData(images);\n    },\n    components: {\n        Carousel,\n    },\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/App/App.js\n **/","export default {\r\n    ready() {\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            currentSlideIndex: 0,\r\n            images: [],\r\n            imagesCount: 0,\r\n            carouselWraperStyle: { left: 0, width: 0 },\r\n            imageStyle: {},\r\n        };\r\n    },\r\n    methods: {\r\n        setData(images) {\r\n            this.images = images;\r\n            this.imagesCount = this.images.length;\r\n            this.carouselWraperStyle.width = `${100 * this.imagesCount}%`;\r\n        },\r\n        setCurrentSlide(index) {\r\n            this.currentSlideIndex = index;\r\n            this.carouselWraperStyle.left = `${-100 * this.currentSlideIndex}%`;\r\n        },\r\n    },\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/Carousel/Carousel.js\n **/",";(function() {\n\"use strict\";\n\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function(optJsClass, optCssClass) {},\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function(element, optJsClass) {},\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function(elements) {},\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function() {},\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function(jsClass, callback) {},\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function(config) {},\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  downgradeElements: function(nodes) {}\n};\n\ncomponentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>}\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @returns {boolean}\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n        typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var ev;\n      if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n        ev = new Event('mdl-componentupgraded', {\n          'bubbles': true, 'cancelable': false\n        });\n      } else {\n        ev = document.createEvent('Events');\n        ev.initEvent('mdl-componentupgraded', true, true);\n      }\n      element.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (typeof elements.item === 'function') {\n        elements = Array.prototype.slice.call(/** @type {Array} */ (elements));\n      } else {\n        elements = [elements];\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n        typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev;\n      if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n        ev = new Event('mdl-componentdowngraded', {\n          'bubbles': true, 'cancelable': false\n        });\n      } else {\n        ev = document.createEvent('Events');\n        ev.initEvent('mdl-componentdowngraded', true, true);\n      }\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function(node) {\n      createdComponents_.filter(function(item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic;  // jshint ignore:line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig;  // jshint ignore:line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component;  // jshint ignore:line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n    componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n    componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function() {};\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function() {};\n  }\n});\n\n// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n// MIT license\nif (!Date.now) {\n    /**\n   * Date.now polyfill.\n   * @return {number} the current Date\n   */\n    Date.now = function () {\n        return new Date().getTime();\n    };\n    Date['now'] = Date.now;\n}\nvar vendors = [\n    'webkit',\n    'moz'\n];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n    var vp = vendors[i];\n    window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    window['requestAnimationFrame'] = window.requestAnimationFrame;\n    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n}\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    /**\n   * requestAnimationFrame polyfill.\n   * @param  {!Function} callback the callback function.\n   */\n    window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n            callback(lastTime = nextTime);\n        }, nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n    window['requestAnimationFrame'] = window.requestAnimationFrame;\n    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n}\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialButton'] = MaterialButton;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialButton.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n        this.element_.blur();\n    }\n};\n// Public methods.\n/**\n   * Disable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n/**\n   * Enable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n/**\n   * Initialize element.\n   */\nMaterialButton.prototype.init = function () {\n    if (this.element_) {\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleElement_ = document.createElement('span');\n            this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(this.rippleElement_);\n            this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n            this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n        this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialCheckbox = function MaterialCheckbox(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialCheckbox'] = MaterialCheckbox;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialCheckbox.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialCheckbox.prototype['checkToggleState'] = MaterialCheckbox.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialCheckbox.prototype['checkDisabled'] = MaterialCheckbox.prototype.checkDisabled;\n/**\n   * Disable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;\n/**\n   * Enable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;\n/**\n   * Check checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;\n/**\n   * Uncheck checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialCheckbox.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var boxOutline = document.createElement('span');\n        boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n        var tickContainer = document.createElement('span');\n        tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n        var tickOutline = document.createElement('span');\n        tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n        boxOutline.appendChild(tickOutline);\n        this.element_.appendChild(tickContainer);\n        this.element_.appendChild(boxOutline);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for icon toggle MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialIconToggle = function MaterialIconToggle(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialIconToggle'] = MaterialIconToggle;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialIconToggle.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialIconToggle.prototype.CssClasses_ = {\n    INPUT: 'mdl-icon-toggle__input',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialIconToggle.prototype['checkToggleState'] = MaterialIconToggle.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialIconToggle.prototype['checkDisabled'] = MaterialIconToggle.prototype.checkDisabled;\n/**\n   * Disable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['disable'] = MaterialIconToggle.prototype.disable;\n/**\n   * Enable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;\n/**\n   * Check icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;\n/**\n   * Uncheck icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['uncheck'] = MaterialIconToggle.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialIconToggle.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialIconToggle,\n    classAsString: 'MaterialIconToggle',\n    cssClass: 'mdl-js-icon-toggle',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialMenu'] = MaterialMenu;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',\n    // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n};\n/**\n   * Initialize element.\n   */\nMaterialMenu.prototype.init = function () {\n    if (this.element_) {\n        // Create container for the menu.\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        this.container_ = container;\n        // Create outline for the menu (shadow and background).\n        var outline = document.createElement('div');\n        outline.classList.add(this.CssClasses_.OUTLINE);\n        this.outline_ = outline;\n        container.insertBefore(outline, this.element_);\n        // Find the \"for\" element and bind events to it.\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        var forEl = null;\n        if (forElId) {\n            forEl = document.getElementById(forElId);\n            if (forEl) {\n                this.forElement_ = forEl;\n                forEl.addEventListener('click', this.handleForClick_.bind(this));\n                forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));\n            }\n        }\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n        this.boundItemClick_ = this.handleItemClick_.bind(this);\n        for (var i = 0; i < items.length; i++) {\n            // Add a listener to each menu item.\n            items[i].addEventListener('click', this.boundItemClick_);\n            // Add a tab index to each menu item.\n            items[i].tabIndex = '-1';\n            // Add a keyboard listener to each menu item.\n            items[i].addEventListener('keydown', this.boundItemKeydown_);\n        }\n        // Add ripple classes to each item, if the user has enabled ripples.\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            for (i = 0; i < items.length; i++) {\n                var item = items[i];\n                var rippleContainer = document.createElement('span');\n                rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                rippleContainer.appendChild(ripple);\n                item.appendChild(rippleContainer);\n                item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            }\n        }\n        // Copy alignment classes to the container, so the outline can use them.\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n            this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n        }\n        container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForClick_ = function (evt) {\n    if (this.element_ && this.forElement_) {\n        var rect = this.forElement_.getBoundingClientRect();\n        var forRect = this.forElement_.parentElement.getBoundingClientRect();\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            // Position below the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            // Position above the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            // Position above the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else {\n            // Default: position below the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        }\n    }\n    this.toggle(evt);\n};\n/**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                items[items.length - 1].focus();\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                items[0].focus();\n            }\n        }\n    }\n};\n/**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                if (currentIndex > 0) {\n                    items[currentIndex - 1].focus();\n                } else {\n                    items[items.length - 1].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                if (items.length > currentIndex + 1) {\n                    items[currentIndex + 1].focus();\n                } else {\n                    items[0].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n                evt.preventDefault();\n                // Send mousedown and mouseup to trigger ripple.\n                var e = new MouseEvent('mousedown');\n                evt.target.dispatchEvent(e);\n                e = new MouseEvent('mouseup');\n                evt.target.dispatchEvent(e);\n                // Send click.\n                evt.target.click();\n            } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n                evt.preventDefault();\n                this.hide();\n            }\n        }\n    }\n};\n/**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemClick_ = function (evt) {\n    if (evt.target.hasAttribute('disabled')) {\n        evt.stopPropagation();\n    } else {\n        // Wait some time before closing menu, so the user can see the ripple.\n        this.closing_ = true;\n        window.setTimeout(function (evt) {\n            this.hide();\n            this.closing_ = false;\n        }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n    }\n};\n/**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {number} height Height of the clip rectangle\n   * @param {number} width Width of the clip rectangle\n   * @private\n   */\nMaterialMenu.prototype.applyClip_ = function (height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not clip.\n        this.element_.style.clip = '';\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        // Clip to the top right corner of the menu.\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Clip to the bottom left corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Clip to the bottom right corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n    } else {\n        // Default: do not clip (same as clipping to the top left corner).\n        this.element_.style.clip = '';\n    }\n};\n/**\n   * Cleanup function to remove animation listeners.\n   *\n   * @param {Event} evt\n   * @private\n   */\nMaterialMenu.prototype.removeAnimationEndListener_ = function (evt) {\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\nMaterialMenu.prototype.addAnimationEndListener_ = function () {\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n};\n/**\n   * Displays the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.show = function (evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n        // Measure the inner element.\n        var height = this.element_.getBoundingClientRect().height;\n        var width = this.element_.getBoundingClientRect().width;\n        // Apply the inner element's size to the container and outline.\n        this.container_.style.width = width + 'px';\n        this.container_.style.height = height + 'px';\n        this.outline_.style.width = width + 'px';\n        this.outline_.style.height = height + 'px';\n        var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION;\n        // Calculate transition delays for individual menu items, so that they fade\n        // in one at a time.\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        for (var i = 0; i < items.length; i++) {\n            var itemDelay = null;\n            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n                itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';\n            } else {\n                itemDelay = items[i].offsetTop / height * transitionDuration + 's';\n            }\n            items[i].style.transitionDelay = itemDelay;\n        }\n        // Apply the initial clip to the text before we start animating.\n        this.applyClip_(height, width);\n        // Wait for the next frame, turn on animation, and apply the final clip.\n        // Also make it visible. This triggers the transitions.\n        window.requestAnimationFrame(function () {\n            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n            this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n            this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n        }.bind(this));\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n        // Add a click listener to the document, to close the menu.\n        var callback = function (e) {\n            // Check to see if the document is processing the same event that\n            // displayed the menu in the first place. If so, do nothing.\n            // Also check to see if the menu is in the process of closing itself, and\n            // do nothing in that case.\n            // Also check if the clicked element is a menu item\n            // if so, do nothing.\n            if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n                document.removeEventListener('click', callback);\n                this.hide();\n            }\n        }.bind(this);\n        document.addEventListener('click', callback);\n    }\n};\nMaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\n/**\n   * Hides the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.hide = function () {\n    if (this.element_ && this.container_ && this.outline_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        // Remove all transition delays; menu items fade out concurrently.\n        for (var i = 0; i < items.length; i++) {\n            items[i].style.removeProperty('transition-delay');\n        }\n        // Measure the inner element.\n        var rect = this.element_.getBoundingClientRect();\n        var height = rect.height;\n        var width = rect.width;\n        // Turn on animation, and apply the final clip. Also make invisible.\n        // This triggers the transitions.\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.applyClip_(height, width);\n        this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n    }\n};\nMaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\n/**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @public\n   */\nMaterialMenu.prototype.toggle = function (evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        this.hide();\n    } else {\n        this.show(evt);\n    }\n};\nMaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Progress MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialProgress = function MaterialProgress(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialProgress'] = MaterialProgress;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialProgress.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialProgress.prototype.CssClasses_ = { INDETERMINATE_CLASS: 'mdl-progress__indeterminate' };\n/**\n   * Set the current progress of the progressbar.\n   *\n   * @param {number} p Percentage of the progress (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setProgress = function (p) {\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n        return;\n    }\n    this.progressbar_.style.width = p + '%';\n};\nMaterialProgress.prototype['setProgress'] = MaterialProgress.prototype.setProgress;\n/**\n   * Set the current progress of the buffer.\n   *\n   * @param {number} p Percentage of the buffer (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setBuffer = function (p) {\n    this.bufferbar_.style.width = p + '%';\n    this.auxbar_.style.width = 100 - p + '%';\n};\nMaterialProgress.prototype['setBuffer'] = MaterialProgress.prototype.setBuffer;\n/**\n   * Initialize element.\n   */\nMaterialProgress.prototype.init = function () {\n    if (this.element_) {\n        var el = document.createElement('div');\n        el.className = 'progressbar bar bar1';\n        this.element_.appendChild(el);\n        this.progressbar_ = el;\n        el = document.createElement('div');\n        el.className = 'bufferbar bar bar2';\n        this.element_.appendChild(el);\n        this.bufferbar_ = el;\n        el = document.createElement('div');\n        el.className = 'auxbar bar bar3';\n        this.element_.appendChild(el);\n        this.auxbar_ = el;\n        this.progressbar_.style.width = '0%';\n        this.bufferbar_.style.width = '100%';\n        this.auxbar_.style.width = '0%';\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialProgress,\n    classAsString: 'MaterialProgress',\n    cssClass: 'mdl-js-progress',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Radio MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRadio'] = MaterialRadio;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRadio.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onChange_ = function (event) {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n        var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n        // Different name == different group, so no point updating those.\n        if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n            radios[i]['MaterialRadio'].updateClasses_();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onMouseup_ = function (event) {\n    this.blur_();\n};\n/**\n   * Update classes.\n   *\n   * @private\n   */\nMaterialRadio.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialRadio.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.btnElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkDisabled = function () {\n    if (this.btnElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkToggleState = function () {\n    if (this.btnElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState;\n/**\n   * Disable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.disable = function () {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\n/**\n   * Enable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.enable = function () {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\n/**\n   * Check radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.check = function () {\n    this.btnElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\n/**\n   * Uncheck radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.uncheck = function () {\n    this.btnElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialRadio.prototype.init = function () {\n    if (this.element_) {\n        this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n        this.boundChangeHandler_ = this.onChange_.bind(this);\n        this.boundFocusHandler_ = this.onChange_.bind(this);\n        this.boundBlurHandler_ = this.onBlur_.bind(this);\n        this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n        var outerCircle = document.createElement('span');\n        outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n        var innerCircle = document.createElement('span');\n        innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n        this.element_.appendChild(outerCircle);\n        this.element_.appendChild(innerCircle);\n        var rippleContainer;\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(ripple);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n        this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n        this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Slider MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSlider = function MaterialSlider(element) {\n    this.element_ = element;\n    // Browser feature detection.\n    this.isIE_ = window.navigator.msPointerEnabled;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSlider'] = MaterialSlider;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSlider.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSlider.prototype.CssClasses_ = {\n    IE_CONTAINER: 'mdl-slider__ie-container',\n    SLIDER_CONTAINER: 'mdl-slider__container',\n    BACKGROUND_FLEX: 'mdl-slider__background-flex',\n    BACKGROUND_LOWER: 'mdl-slider__background-lower',\n    BACKGROUND_UPPER: 'mdl-slider__background-upper',\n    IS_LOWEST_VALUE: 'is-lowest-value',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle input on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onInput_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle change on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onChange_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle mouseup on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onMouseUp_ = function (event) {\n    event.target.blur();\n};\n/**\n   * Handle mousedown on container element.\n   * This handler is purpose is to not require the use to click\n   * exactly on the 2px slider element, as FireFox seems to be very\n   * strict about this.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   * @suppress {missingProperties}\n   */\nMaterialSlider.prototype.onContainerMouseDown_ = function (event) {\n    // If this click is not on the parent element (but rather some child)\n    // ignore. It may still bubble up.\n    if (event.target !== this.element_.parentElement) {\n        return;\n    }\n    // Discard the original event and create a new event that\n    // is on the slider element.\n    event.preventDefault();\n    var newEvent = new MouseEvent('mousedown', {\n        target: event.target,\n        buttons: event.buttons,\n        clientX: event.clientX,\n        clientY: this.element_.getBoundingClientRect().y\n    });\n    this.element_.dispatchEvent(newEvent);\n};\n/**\n   * Handle updating of values.\n   *\n   * @private\n   */\nMaterialSlider.prototype.updateValueStyles_ = function () {\n    // Calculate and apply percentages to div structure behind slider.\n    var fraction = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min);\n    if (fraction === 0) {\n        this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n    }\n    if (!this.isIE_) {\n        this.backgroundLower_.style.flex = fraction;\n        this.backgroundLower_.style.webkitFlex = fraction;\n        this.backgroundUpper_.style.flex = 1 - fraction;\n        this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n    }\n};\n// Public methods.\n/**\n   * Disable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable;\n/**\n   * Enable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable;\n/**\n   * Update slider value.\n   *\n   * @param {number} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialSlider.prototype.change = function (value) {\n    if (typeof value !== 'undefined') {\n        this.element_.value = value;\n    }\n    this.updateValueStyles_();\n};\nMaterialSlider.prototype['change'] = MaterialSlider.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialSlider.prototype.init = function () {\n    if (this.element_) {\n        if (this.isIE_) {\n            // Since we need to specify a very large height in IE due to\n            // implementation limitations, we add a parent here that trims it down to\n            // a reasonable size.\n            var containerIE = document.createElement('div');\n            containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n            this.element_.parentElement.insertBefore(containerIE, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            containerIE.appendChild(this.element_);\n        } else {\n            // For non-IE browsers, we need a div structure that sits behind the\n            // slider and allows us to style the left and right sides of it with\n            // different colors.\n            var container = document.createElement('div');\n            container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n            this.element_.parentElement.insertBefore(container, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            container.appendChild(this.element_);\n            var backgroundFlex = document.createElement('div');\n            backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n            container.appendChild(backgroundFlex);\n            this.backgroundLower_ = document.createElement('div');\n            this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n            backgroundFlex.appendChild(this.backgroundLower_);\n            this.backgroundUpper_ = document.createElement('div');\n            this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n            backgroundFlex.appendChild(this.backgroundUpper_);\n        }\n        this.boundInputHandler = this.onInput_.bind(this);\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\n        this.element_.addEventListener('input', this.boundInputHandler);\n        this.element_.addEventListener('change', this.boundChangeHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\n        this.updateValueStyles_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSlider,\n    classAsString: 'MaterialSlider',\n    cssClass: 'mdl-js-slider',\n    widget: true\n});\n/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Snackbar MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSnackbar = function MaterialSnackbar(element) {\n    this.element_ = element;\n    this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);\n    this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);\n    if (!this.textElement_) {\n        throw new Error('There must be a message element for a snackbar.');\n    }\n    if (!this.actionElement_) {\n        throw new Error('There must be an action element for a snackbar.');\n    }\n    this.active = false;\n    this.actionHandler_ = undefined;\n    this.message_ = undefined;\n    this.actionText_ = undefined;\n    this.queuedNotifications_ = [];\n    this.setActionHidden_(true);\n};\nwindow['MaterialSnackbar'] = MaterialSnackbar;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSnackbar.prototype.Constant_ = {\n    // The duration of the snackbar show/hide animation, in ms.\n    ANIMATION_LENGTH: 250\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSnackbar.prototype.cssClasses_ = {\n    SNACKBAR: 'mdl-snackbar',\n    MESSAGE: 'mdl-snackbar__text',\n    ACTION: 'mdl-snackbar__action',\n    ACTIVE: 'mdl-snackbar--active'\n};\n/**\n   * Display the snackbar.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.displaySnackbar_ = function () {\n    this.element_.setAttribute('aria-hidden', 'true');\n    if (this.actionHandler_) {\n        this.actionElement_.textContent = this.actionText_;\n        this.actionElement_.addEventListener('click', this.actionHandler_);\n        this.setActionHidden_(false);\n    }\n    this.textElement_.textContent = this.message_;\n    this.element_.classList.add(this.cssClasses_.ACTIVE);\n    this.element_.setAttribute('aria-hidden', 'false');\n    setTimeout(this.cleanup_.bind(this), this.timeout_);\n};\n/**\n   * Show the snackbar.\n   *\n   * @param {Object} data The data for the notification.\n   * @public\n   */\nMaterialSnackbar.prototype.showSnackbar = function (data) {\n    if (data === undefined) {\n        throw new Error('Please provide a data object with at least a message to display.');\n    }\n    if (data['message'] === undefined) {\n        throw new Error('Please provide a message to be displayed.');\n    }\n    if (data['actionHandler'] && !data['actionText']) {\n        throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n        this.queuedNotifications_.push(data);\n    } else {\n        this.active = true;\n        this.message_ = data['message'];\n        if (data['timeout']) {\n            this.timeout_ = data['timeout'];\n        } else {\n            this.timeout_ = 2750;\n        }\n        if (data['actionHandler']) {\n            this.actionHandler_ = data['actionHandler'];\n        }\n        if (data['actionText']) {\n            this.actionText_ = data['actionText'];\n        }\n        this.displaySnackbar_();\n    }\n};\nMaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar;\n/**\n   * Check if the queue has items within it.\n   * If it does, display the next entry.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.checkQueue_ = function () {\n    if (this.queuedNotifications_.length > 0) {\n        this.showSnackbar(this.queuedNotifications_.shift());\n    }\n};\n/**\n   * Cleanup the snackbar event listeners and accessiblity attributes.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.cleanup_ = function () {\n    this.element_.classList.remove(this.cssClasses_.ACTIVE);\n    setTimeout(function () {\n        this.element_.setAttribute('aria-hidden', 'true');\n        this.textElement_.textContent = '';\n        if (!Boolean(this.actionElement_.getAttribute('aria-hidden'))) {\n            this.setActionHidden_(true);\n            this.actionElement_.textContent = '';\n            this.actionElement_.removeEventListener('click', this.actionHandler_);\n        }\n        this.actionHandler_ = undefined;\n        this.message_ = undefined;\n        this.actionText_ = undefined;\n        this.active = false;\n        this.checkQueue_();\n    }.bind(this), this.Constant_.ANIMATION_LENGTH);\n};\n/**\n   * Set the action handler hidden state.\n   *\n   * @param {boolean} value\n   * @private\n   */\nMaterialSnackbar.prototype.setActionHidden_ = function (value) {\n    if (value) {\n        this.actionElement_.setAttribute('aria-hidden', 'true');\n    } else {\n        this.actionElement_.removeAttribute('aria-hidden');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSnackbar,\n    classAsString: 'MaterialSnackbar',\n    cssClass: 'mdl-js-snackbar',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\nvar MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSpinner'] = MaterialSpinner;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSpinner.prototype.Constant_ = { MDL_SPINNER_LAYER_COUNT: 4 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n};\n/**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {number} index Index of the layer to be created.\n   * @public\n   */\nMaterialSpinner.prototype.createLayer = function (index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n    var circleOwners = [\n        leftClipper,\n        gapPatch,\n        rightClipper\n    ];\n    for (var i = 0; i < circleOwners.length; i++) {\n        var circle = document.createElement('div');\n        circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n        circleOwners[i].appendChild(circle);\n    }\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n    this.element_.appendChild(layer);\n};\nMaterialSpinner.prototype['createLayer'] = MaterialSpinner.prototype.createLayer;\n/**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\nMaterialSpinner.prototype.stop = function () {\n    this.element_.classList.remove('is-active');\n};\nMaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n/**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\nMaterialSpinner.prototype.start = function () {\n    this.element_.classList.add('is-active');\n};\nMaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n/**\n   * Initialize element.\n   */\nMaterialSpinner.prototype.init = function () {\n    if (this.element_) {\n        for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n            this.createLayer(i);\n        }\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSwitch'] = MaterialSwitch;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSwitch.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialSwitch.prototype['checkDisabled'] = MaterialSwitch.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialSwitch.prototype['checkToggleState'] = MaterialSwitch.prototype.checkToggleState;\n/**\n   * Disable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;\n/**\n   * Enable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;\n/**\n   * Activate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.on = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;\n/**\n   * Deactivate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.off = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;\n/**\n   * Initialize element.\n   */\nMaterialSwitch.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var track = document.createElement('div');\n        track.classList.add(this.CssClasses_.TRACK);\n        var thumb = document.createElement('div');\n        thumb.classList.add(this.CssClasses_.THUMB);\n        var focusHelper = document.createElement('span');\n        focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n        thumb.appendChild(focusHelper);\n        this.element_.appendChild(track);\n        this.element_.appendChild(thumb);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundChangeHandler);\n        this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n        this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tabs MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialTabs = function MaterialTabs(element) {\n    // Stores the HTML element.\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTabs'] = MaterialTabs;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.CssClasses_ = {\n    TAB_CLASS: 'mdl-tabs__tab',\n    PANEL_CLASS: 'mdl-tabs__panel',\n    ACTIVE_CLASS: 'is-active',\n    UPGRADED_CLASS: 'is-upgraded',\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n    MDL_RIPPLE: 'mdl-ripple',\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n};\n/**\n   * Handle clicks to a tabs component\n   *\n   * @private\n   */\nMaterialTabs.prototype.initTabs_ = function () {\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n    }\n    // Select element tabs, document panels\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n    this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n    // Create new tabs for each tab element\n    for (var i = 0; i < this.tabs_.length; i++) {\n        new MaterialTab(this.tabs_[i], this);\n    }\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetTabState_ = function () {\n    for (var k = 0; k < this.tabs_.length; k++) {\n        this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetPanelState_ = function () {\n    for (var j = 0; j < this.panels_.length; j++) {\n        this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialTabs.prototype.init = function () {\n    if (this.element_) {\n        this.initTabs_();\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {Element} tab The HTML element for the tab.\n   * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\n   */\nfunction MaterialTab(tab, ctx) {\n    if (tab) {\n        if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n            var ripple = document.createElement('span');\n            ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n            rippleContainer.appendChild(ripple);\n            tab.appendChild(rippleContainer);\n        }\n        tab.addEventListener('click', function (e) {\n            e.preventDefault();\n            var href = tab.href.split('#')[1];\n            var panel = ctx.element_.querySelector('#' + href);\n            ctx.resetTabState_();\n            ctx.resetPanelState_();\n            tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n            panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n        });\n    }\n}\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTabs,\n    classAsString: 'MaterialTabs',\n    cssClass: 'mdl-js-tabs'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTextfield'] = MaterialTextfield;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded',\n    HAS_PLACEHOLDER: 'has-placeholder'\n};\n/**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onKeyDown_ = function (event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n        if (currentRowCount >= this.maxRows) {\n            event.preventDefault();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle reset event from out side.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onReset_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n};\n// Public methods.\n/**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDisabled = function () {\n    if (this.input_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialTextfield.prototype['checkDisabled'] = MaterialTextfield.prototype.checkDisabled;\n/**\n  * Check the focus state and update field accordingly.\n  *\n  * @public\n  */\nMaterialTextfield.prototype.checkFocus = function () {\n    if (Boolean(this.element_.querySelector(':focus'))) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n};\nMaterialTextfield.prototype['checkFocus'] = MaterialTextfield.prototype.checkFocus;\n/**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkValidity = function () {\n    if (this.input_.validity) {\n        if (this.input_.validity.valid) {\n            this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n        } else {\n            this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n    }\n};\nMaterialTextfield.prototype['checkValidity'] = MaterialTextfield.prototype.checkValidity;\n/**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDirty = function () {\n    if (this.input_.value && this.input_.value.length > 0) {\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n};\nMaterialTextfield.prototype['checkDirty'] = MaterialTextfield.prototype.checkDirty;\n/**\n   * Disable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.disable = function () {\n    this.input_.disabled = true;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n/**\n   * Enable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.enable = function () {\n    this.input_.disabled = false;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n/**\n   * Update text field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialTextfield.prototype.change = function (value) {\n    this.input_.value = value || '';\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialTextfield.prototype.init = function () {\n    if (this.element_) {\n        this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.input_) {\n            if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n                this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n                if (isNaN(this.maxRows)) {\n                    this.maxRows = this.Constant_.NO_MAX_ROWS;\n                }\n            }\n            if (this.input_.hasAttribute('placeholder')) {\n                this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n            }\n            this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n            this.boundFocusHandler = this.onFocus_.bind(this);\n            this.boundBlurHandler = this.onBlur_.bind(this);\n            this.boundResetHandler = this.onReset_.bind(this);\n            this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n            this.input_.addEventListener('focus', this.boundFocusHandler);\n            this.input_.addEventListener('blur', this.boundBlurHandler);\n            this.input_.addEventListener('reset', this.boundResetHandler);\n            if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n                // TODO: This should handle pasting multi line text.\n                // Currently doesn't.\n                this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n                this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n            }\n            var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n            this.updateClasses_();\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n            if (invalid) {\n                this.element_.classList.add(this.CssClasses_.IS_INVALID);\n            }\n            if (this.input_.hasAttribute('autofocus')) {\n                this.element_.focus();\n                this.checkFocus();\n            }\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTooltip'] = MaterialTooltip;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTooltip.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n};\n/**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + props.width / 2;\n    var top = props.top + props.height / 2;\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        left = props.width / 2;\n        if (top + marginTop < 0) {\n            this.element_.style.top = 0;\n            this.element_.style.marginTop = 0;\n        } else {\n            this.element_.style.top = top + 'px';\n            this.element_.style.marginTop = marginTop + 'px';\n        }\n    } else {\n        if (left + marginLeft < 0) {\n            this.element_.style.left = 0;\n            this.element_.style.marginLeft = 0;\n        } else {\n            this.element_.style.left = left + 'px';\n            this.element_.style.marginLeft = marginLeft + 'px';\n        }\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n        this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n        this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n        this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Handle mouseleave for tooltip.\n   *\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseLeave_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Initialize element.\n   */\nMaterialTooltip.prototype.init = function () {\n    if (this.element_) {\n        var forElId = this.element_.getAttribute('for');\n        if (forElId) {\n            this.forElement_ = document.getElementById(forElId);\n        }\n        if (this.forElement_) {\n            // It's left here because it prevents accidental text selection on Android\n            if (!this.forElement_.hasAttribute('tabindex')) {\n                this.forElement_.setAttribute('tabindex', '0');\n            }\n            this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n            this.boundMouseLeaveHandler = this.handleMouseLeave_.bind(this);\n            this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveHandler, false);\n            window.addEventListener('touchstart', this.boundMouseLeaveHandler);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Layout MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialLayout = function MaterialLayout(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialLayout'] = MaterialLayout;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialLayout.prototype.Constant_ = {\n    MAX_WIDTH: '(max-width: 1024px)',\n    TAB_SCROLL_PIXELS: 100,\n    RESIZE_TIMEOUT: 100,\n    MENU_ICON: '&#xE5D2;',\n    CHEVRON_LEFT: 'chevron_left',\n    CHEVRON_RIGHT: 'chevron_right'\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32\n};\n/**\n   * Modes.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Mode_ = {\n    STANDARD: 0,\n    SEAMED: 1,\n    WATERFALL: 2,\n    SCROLL: 3\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialLayout.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-layout__container',\n    HEADER: 'mdl-layout__header',\n    DRAWER: 'mdl-layout__drawer',\n    CONTENT: 'mdl-layout__content',\n    DRAWER_BTN: 'mdl-layout__drawer-button',\n    ICON: 'material-icons',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\n    FIXED_HEADER: 'mdl-layout--fixed-header',\n    OBFUSCATOR: 'mdl-layout__obfuscator',\n    TAB_BAR: 'mdl-layout__tab-bar',\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n    TAB: 'mdl-layout__tab',\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n    PANEL: 'mdl-layout__tab-panel',\n    HAS_DRAWER: 'has-drawer',\n    HAS_TABS: 'has-tabs',\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n    CASTING_SHADOW: 'is-casting-shadow',\n    IS_COMPACT: 'is-compact',\n    IS_SMALL_SCREEN: 'is-small-screen',\n    IS_DRAWER_OPEN: 'is-visible',\n    IS_ACTIVE: 'is-active',\n    IS_UPGRADED: 'is-upgraded',\n    IS_ANIMATING: 'is-animating',\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n};\n/**\n   * Handles scrolling on the content.\n   *\n   * @private\n   */\nMaterialLayout.prototype.contentScrollHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n        return;\n    }\n    var headerVisible = !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) || this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\n    if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    }\n};\n/**\n   * Handles a keyboard event on the drawer.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.keyboardEventHandler_ = function (evt) {\n    // Only react when the drawer is open.\n    if (evt.keyCode === this.Keycodes_.ESCAPE && this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.toggleDrawer();\n    }\n};\n/**\n   * Handles changes in screen size.\n   *\n   * @private\n   */\nMaterialLayout.prototype.screenSizeHandler_ = function () {\n    if (this.screenSizeMediaQuery_.matches) {\n        this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n        // Collapse drawer (if any) when moving to a large screen size.\n        if (this.drawer_) {\n            this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n            this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n        }\n    }\n};\n/**\n   * Handles events of drawer button.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.drawerToggleHandler_ = function (evt) {\n    if (evt && evt.type === 'keydown') {\n        if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n            // prevent scrolling in drawer nav\n            evt.preventDefault();\n        } else {\n            // prevent other keys\n            return;\n        }\n    }\n    this.toggleDrawer();\n};\n/**\n   * Handles (un)setting the `is-animating` class\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerTransitionEndHandler_ = function () {\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Handles expanding the header on click\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerClickHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetTabState_ = function (tabBar) {\n    for (var k = 0; k < tabBar.length; k++) {\n        tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetPanelState_ = function (panels) {\n    for (var j = 0; j < panels.length; j++) {\n        panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n  * Toggle drawer state\n  *\n  * @public\n  */\nMaterialLayout.prototype.toggleDrawer = function () {\n    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    // Set accessibility properties.\n    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.drawer_.setAttribute('aria-hidden', 'false');\n        drawerButton.setAttribute('aria-expanded', 'true');\n    } else {\n        this.drawer_.setAttribute('aria-hidden', 'true');\n        drawerButton.setAttribute('aria-expanded', 'false');\n    }\n};\nMaterialLayout.prototype['toggleDrawer'] = MaterialLayout.prototype.toggleDrawer;\n/**\n   * Initialize element.\n   */\nMaterialLayout.prototype.init = function () {\n    if (this.element_) {\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        var focusedElement = this.element_.querySelector(':focus');\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        if (focusedElement) {\n            focusedElement.focus();\n        }\n        var directChildren = this.element_.childNodes;\n        var numChildren = directChildren.length;\n        for (var c = 0; c < numChildren; c++) {\n            var child = directChildren[c];\n            if (child.classList && child.classList.contains(this.CssClasses_.HEADER)) {\n                this.header_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.DRAWER)) {\n                this.drawer_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.CONTENT)) {\n                this.content_ = child;\n            }\n        }\n        window.addEventListener('pageshow', function (e) {\n            if (e.persisted) {\n                // when page is loaded from back/forward cache\n                // trigger repaint to let layout scroll in safari\n                this.element_.style.overflowY = 'hidden';\n                requestAnimationFrame(function () {\n                    this.element_.style.overflowY = '';\n                }.bind(this));\n            }\n        }.bind(this), false);\n        if (this.header_) {\n            this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n        }\n        var mode = this.Mode_.STANDARD;\n        if (this.header_) {\n            if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n                mode = this.Mode_.SEAMED;\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)) {\n                mode = this.Mode_.WATERFALL;\n                this.header_.addEventListener('transitionend', this.headerTransitionEndHandler_.bind(this));\n                this.header_.addEventListener('click', this.headerClickHandler_.bind(this));\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)) {\n                mode = this.Mode_.SCROLL;\n                container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n            }\n            if (mode === this.Mode_.STANDARD) {\n                this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n                this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.WATERFALL) {\n                // Add and remove shadows depending on scroll position.\n                // Also add/remove auxiliary class for styling of the compact version of\n                // the header.\n                this.content_.addEventListener('scroll', this.contentScrollHandler_.bind(this));\n                this.contentScrollHandler_();\n            }\n        }\n        // Add drawer toggling button to our layout, if we have an openable drawer.\n        if (this.drawer_) {\n            var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n            if (!drawerButton) {\n                drawerButton = document.createElement('div');\n                drawerButton.setAttribute('aria-expanded', 'false');\n                drawerButton.setAttribute('role', 'button');\n                drawerButton.setAttribute('tabindex', '0');\n                drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n                var drawerButtonIcon = document.createElement('i');\n                drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n                drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\n                drawerButton.appendChild(drawerButtonIcon);\n            }\n            if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n                //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n            } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n                //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n            }\n            drawerButton.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            drawerButton.addEventListener('keydown', this.drawerToggleHandler_.bind(this));\n            // Add a class if the layout has a drawer, for altering the left padding.\n            // Adds the HAS_DRAWER to the elements since this.header_ may or may\n            // not be present.\n            this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n            // If we have a fixed header, add the button to the header rather than\n            // the layout.\n            if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n                this.header_.insertBefore(drawerButton, this.header_.firstChild);\n            } else {\n                this.element_.insertBefore(drawerButton, this.content_);\n            }\n            var obfuscator = document.createElement('div');\n            obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n            this.element_.appendChild(obfuscator);\n            obfuscator.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            this.obfuscator_ = obfuscator;\n            this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\n            this.drawer_.setAttribute('aria-hidden', 'true');\n        }\n        // Keep an eye on screen size, and add/remove auxiliary class for styling\n        // of small screens.\n        this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n        this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n        this.screenSizeHandler_();\n        // Initialize tabs, if any.\n        if (this.header_ && this.tabBar_) {\n            this.element_.classList.add(this.CssClasses_.HAS_TABS);\n            var tabContainer = document.createElement('div');\n            tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n            this.header_.insertBefore(tabContainer, this.tabBar_);\n            this.header_.removeChild(this.tabBar_);\n            var leftButton = document.createElement('div');\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n            var leftButtonIcon = document.createElement('i');\n            leftButtonIcon.classList.add(this.CssClasses_.ICON);\n            leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n            leftButton.appendChild(leftButtonIcon);\n            leftButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            var rightButton = document.createElement('div');\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n            var rightButtonIcon = document.createElement('i');\n            rightButtonIcon.classList.add(this.CssClasses_.ICON);\n            rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n            rightButton.appendChild(rightButtonIcon);\n            rightButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            tabContainer.appendChild(leftButton);\n            tabContainer.appendChild(this.tabBar_);\n            tabContainer.appendChild(rightButton);\n            // Add and remove tab buttons depending on scroll position and total\n            // window size.\n            var tabUpdateHandler = function () {\n                if (this.tabBar_.scrollLeft > 0) {\n                    leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n                if (this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n                    rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n            }.bind(this);\n            this.tabBar_.addEventListener('scroll', tabUpdateHandler);\n            tabUpdateHandler();\n            // Update tabs when the window resizes.\n            var windowResizeHandler = function () {\n                // Use timeouts to make sure it doesn't happen too often.\n                if (this.resizeTimeoutId_) {\n                    clearTimeout(this.resizeTimeoutId_);\n                }\n                this.resizeTimeoutId_ = setTimeout(function () {\n                    tabUpdateHandler();\n                    this.resizeTimeoutId_ = null;\n                }.bind(this), this.Constant_.RESIZE_TIMEOUT);\n            }.bind(this);\n            window.addEventListener('resize', windowResizeHandler);\n            if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n                this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            }\n            // Select element tabs, document panels\n            var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n            var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n            // Create new tabs for each tab element\n            for (var i = 0; i < tabs.length; i++) {\n                new MaterialLayoutTab(tabs[i], tabs, panels, this);\n            }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {HTMLElement} tab The HTML element for the tab.\n   * @param {!Array<HTMLElement>} tabs Array with HTML elements for all tabs.\n   * @param {!Array<HTMLElement>} panels Array with HTML elements for all panels.\n   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\n   */\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n    /**\n     * Auxiliary method to programmatically select a tab in the UI.\n     */\n    function selectTab() {\n        var href = tab.href.split('#')[1];\n        var panel = layout.content_.querySelector('#' + href);\n        layout.resetTabState_(tabs);\n        layout.resetPanelState_(panels);\n        tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n        panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    }\n    if (layout.tabBar_.classList.contains(layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n        rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n        var ripple = document.createElement('span');\n        ripple.classList.add(layout.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(ripple);\n        tab.appendChild(rippleContainer);\n    }\n    tab.addEventListener('click', function (e) {\n        if (tab.getAttribute('href').charAt(0) === '#') {\n            e.preventDefault();\n            selectTab();\n        }\n    });\n    tab.show = selectTab;\n}\nwindow['MaterialLayoutTab'] = MaterialLayoutTab;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialLayout,\n    classAsString: 'MaterialLayout',\n    cssClass: 'mdl-js-layout'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Data Table Card MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialDataTable = function MaterialDataTable(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialDataTable'] = MaterialDataTable;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialDataTable.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialDataTable.prototype.CssClasses_ = {\n    DATA_TABLE: 'mdl-data-table',\n    SELECTABLE: 'mdl-data-table--selectable',\n    SELECT_ELEMENT: 'mdl-data-table__select',\n    IS_SELECTED: 'is-selected',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Generates and returns a function that toggles the selection state of a\n   * single row (or multiple rows).\n   *\n   * @param {Element} checkbox Checkbox that toggles the selection state.\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.selectRow_ = function (checkbox, row, opt_rows) {\n    if (row) {\n        return function () {\n            if (checkbox.checked) {\n                row.classList.add(this.CssClasses_.IS_SELECTED);\n            } else {\n                row.classList.remove(this.CssClasses_.IS_SELECTED);\n            }\n        }.bind(this);\n    }\n    if (opt_rows) {\n        return function () {\n            var i;\n            var el;\n            if (checkbox.checked) {\n                for (i = 0; i < opt_rows.length; i++) {\n                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].check();\n                    opt_rows[i].classList.add(this.CssClasses_.IS_SELECTED);\n                }\n            } else {\n                for (i = 0; i < opt_rows.length; i++) {\n                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].uncheck();\n                    opt_rows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }.bind(this);\n    }\n};\n/**\n   * Creates a checkbox for a single or or multiple rows and hooks up the\n   * event handling.\n   *\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.createCheckbox_ = function (row, opt_rows) {\n    var label = document.createElement('label');\n    var labelClasses = [\n        'mdl-checkbox',\n        'mdl-js-checkbox',\n        'mdl-js-ripple-effect',\n        this.CssClasses_.SELECT_ELEMENT\n    ];\n    label.className = labelClasses.join(' ');\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('mdl-checkbox__input');\n    if (row) {\n        checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);\n        checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n    } else if (opt_rows) {\n        checkbox.addEventListener('change', this.selectRow_(checkbox, null, opt_rows));\n    }\n    label.appendChild(checkbox);\n    componentHandler.upgradeElement(label, 'MaterialCheckbox');\n    return label;\n};\n/**\n   * Initialize element.\n   */\nMaterialDataTable.prototype.init = function () {\n    if (this.element_) {\n        var firstHeader = this.element_.querySelector('th');\n        var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));\n        var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));\n        var rows = bodyRows.concat(footRows);\n        if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n            var th = document.createElement('th');\n            var headerCheckbox = this.createCheckbox_(null, rows);\n            th.appendChild(headerCheckbox);\n            firstHeader.parentElement.insertBefore(th, firstHeader);\n            for (var i = 0; i < rows.length; i++) {\n                var firstCell = rows[i].querySelector('td');\n                if (firstCell) {\n                    var td = document.createElement('td');\n                    if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {\n                        var rowCheckbox = this.createCheckbox_(rows[i]);\n                        td.appendChild(rowCheckbox);\n                    }\n                    rows[i].insertBefore(td, firstCell);\n                }\n            }\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialDataTable,\n    classAsString: 'MaterialDataTable',\n    cssClass: 'mdl-js-data-table'\n});\n/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRipple'] = MaterialRipple;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n};\n/**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.downHandler_ = function (event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n        var rect = this.element_.getBoundingClientRect();\n        this.boundHeight = rect.height;\n        this.boundWidth = rect.width;\n        this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n        this.ignoringMouseDown_ = false;\n    } else {\n        if (event.type === 'touchstart') {\n            this.ignoringMouseDown_ = true;\n        }\n        var frameCount = this.getFrameCount();\n        if (frameCount > 0) {\n            return;\n        }\n        this.setFrameCount(1);\n        var bound = event.currentTarget.getBoundingClientRect();\n        var x;\n        var y;\n        // Check if we are handling a keyboard click.\n        if (event.clientX === 0 && event.clientY === 0) {\n            x = Math.round(bound.width / 2);\n            y = Math.round(bound.height / 2);\n        } else {\n            var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n            var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n            x = Math.round(clientX - bound.left);\n            y = Math.round(clientY - bound.top);\n        }\n        this.setRippleXY(x, y);\n        this.setRippleStyles(true);\n        window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n};\n/**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.upHandler_ = function (event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n        // Allow a repaint to occur before removing this class, so the animation\n        // shows for tap events, which seem to trigger a mouseup too soon after\n        // mousedown.\n        window.setTimeout(function () {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        }.bind(this), 0);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialRipple.prototype.init = function () {\n    if (this.element_) {\n        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n            this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);\n            this.frameCount_ = 0;\n            this.rippleSize_ = 0;\n            this.x_ = 0;\n            this.y_ = 0;\n            // Touch start produces a compat mouse down event, which would cause a\n            // second ripples. To avoid that, we use this property to ignore the first\n            // mouse down after a touch start.\n            this.ignoringMouseDown_ = false;\n            this.boundDownHandler = this.downHandler_.bind(this);\n            this.element_.addEventListener('mousedown', this.boundDownHandler);\n            this.element_.addEventListener('touchstart', this.boundDownHandler);\n            this.boundUpHandler = this.upHandler_.bind(this);\n            this.element_.addEventListener('mouseup', this.boundUpHandler);\n            this.element_.addEventListener('mouseleave', this.boundUpHandler);\n            this.element_.addEventListener('touchend', this.boundUpHandler);\n            this.element_.addEventListener('blur', this.boundUpHandler);\n            /**\n         * Getter for frameCount_.\n         * @return {number} the frame count.\n         */\n            this.getFrameCount = function () {\n                return this.frameCount_;\n            };\n            /**\n         * Setter for frameCount_.\n         * @param {number} fC the frame count.\n         */\n            this.setFrameCount = function (fC) {\n                this.frameCount_ = fC;\n            };\n            /**\n         * Getter for rippleElement_.\n         * @return {Element} the ripple element.\n         */\n            this.getRippleElement = function () {\n                return this.rippleElement_;\n            };\n            /**\n         * Sets the ripple X and Y coordinates.\n         * @param  {number} newX the new X coordinate\n         * @param  {number} newY the new Y coordinate\n         */\n            this.setRippleXY = function (newX, newY) {\n                this.x_ = newX;\n                this.y_ = newY;\n            };\n            /**\n         * Sets the ripple styles.\n         * @param  {boolean} start whether or not this is the start frame.\n         */\n            this.setRippleStyles = function (start) {\n                if (this.rippleElement_ !== null) {\n                    var transformString;\n                    var scale;\n                    var size;\n                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n                    if (start) {\n                        scale = this.Constant_.INITIAL_SCALE;\n                        size = this.Constant_.INITIAL_SIZE;\n                    } else {\n                        scale = this.Constant_.FINAL_SCALE;\n                        size = this.rippleSize_ + 'px';\n                        if (recentering) {\n                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';\n                        }\n                    }\n                    transformString = 'translate(-50%, -50%) ' + offset + scale;\n                    this.rippleElement_.style.webkitTransform = transformString;\n                    this.rippleElement_.style.msTransform = transformString;\n                    this.rippleElement_.style.transform = transformString;\n                    if (start) {\n                        this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n                    } else {\n                        this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n                    }\n                }\n            };\n            /**\n         * Handles an animation frame.\n         */\n            this.animFrameHandler = function () {\n                if (this.frameCount_-- > 0) {\n                    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n                } else {\n                    this.setRippleStyles(false);\n                }\n            };\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n});\n}());\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = componentHandler;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/material-design-lite/material.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = \"<div class=carousel _v-6b753e81=\\\"\\\"> <ol class=carousel-indicators _v-6b753e81=\\\"\\\"> <li v-for=\\\"image in images\\\" :class=\\\"{active: $index===currentSlideIndex }\\\" @click=setCurrentSlide($index) _v-6b753e81=\\\"\\\"> </li> </ol> <div class=carousel-inner _v-6b753e81=\\\"\\\"> <div class=carousel-wraper :style=carouselWraperStyle _v-6b753e81=\\\"\\\"> <div v-for=\\\"image in images\\\" class=image :class=\\\"{active:$index === currentSlideIndex}\\\" :style=\\\"{\\n          backgroundImage: `radial-gradient(60% 60%, rgba(0, 0, 0, 0.6) 0%, \\n        rgba(0, 0, 0, 0) 95%), url(${image.img})`,\\n          width: `${100 /imagesCount}%`,\\n        }\\\" _v-6b753e81=\\\"\\\"> <p _v-6b753e81=\\\"\\\">{{image.msg}}</p> </div> </div> </div> <a class=\\\"left carousel-control\\\" _v-6b753e81=\\\"\\\"></a> <a class=\\\"right carousel-control\\\" _v-6b753e81=\\\"\\\"></a> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-6b753e81!./src/components/Carousel/Carousel.html\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = \"<div id=app> <carousel v-ref:carousel></carousel> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./src/components/App/App.html\n ** module id = 8\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"!!babel-loader!./App.js\")\n__vue_template__ = require(\"!!vue-html-loader!./App.html\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/App/App.vue\n ** module id = 9\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-6b753e81&scoped=true!sass-loader?sourceMap!./Carousel.scss\")\n__vue_script__ = require(\"!!babel-loader!./Carousel.js\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-6b753e81!./Carousel.html\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Carousel/Carousel.vue\n ** module id = 10\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 11\n ** module chunks = 0\n **/"],"sourceRoot":""}